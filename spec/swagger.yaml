swagger: '2.0'
info:
  title: Accounting API
  version: '2.0'
  description: |
    # Introduction
    The Xero Accounting API is a RESTful web service and uses the OAuth (v1.0a) protocol to authenticate 3rd party applications. The Accounting API exposes accounting and related functions of the main Xero application and can be used for a variety of purposes such as creating transactions like invoices and credit notes, right through to extracting accounting data via our reports endpoint.
  contact:
    name: Xero Developer Team
    url: 'https://developer.xero.com'
  x-logo:
    url: 'https://lh3.googleusercontent.com/-_IQ9BNy118c/AAAAAAAAAAI/AAAAAAAAAB0/yvA2ZQSg_pk/s500-c-no/photo.jpg'
host: api.xero.com
basePath: /api.xro/2.0
schemes:
  - https
consumes:
  - application/xml
  - application/json
produces:
  - application/xml
  - application/json
tags:
- name: "Accounts"
  externalDocs: 
    description: "Accounts"
    url: "https://developer.xero.com/documentation/api/accounts/"
- name: "BankTransactions"
  externalDocs: 
    description: "BankTransactions"
    url: "https://developer.xero.com/documentation/api/banktransactions/"
- name: "BankTransfers"
  externalDocs: 
    description: "BankTransfers"
    url: "https://developer.xero.com/documentation/api/banktransfers/"
- name: "BrandingThemes"
  externalDocs: 
    description: "BrandingThemes"
    url: "https://developer.xero.com/documentation/api/brandingthemes/"
- name: "Contacts"
  externalDocs: 
    description: "Contacts"
    url: "https://developer.xero.com/documentation/api/contacts/"
- name: "ContactGroups"
  externalDocs: 
    description: "ContactGroups"
    url: "https://developer.xero.com/documentation/api/contactgroups/"
- name: "CreditNotes"
  externalDocs: 
    description: "CreditNotes"
    url: "https://developer.xero.com/documentation/api/creditnotes/"
- name: "Currencies"
  externalDocs: 
    description: "Currencies"
    url: "https://developer.xero.com/documentation/api/currencies/"
- name: "Employees"
  externalDocs: 
    description: "Employees"
    url: "https://developer.xero.com/documentation/api/employees/"
- name: "ExpenseClaims"
  externalDocs: 
    description: "ExpenseClaims"
    url: "https://developer.xero.com/documentation/api/expenseclaims/"
- name: "Invoices"
  externalDocs: 
    description: "Invoices"
    url: "https://developer.xero.com/documentation/api/invoices/"
- name: "Items"
  externalDocs: 
    description: "Items"
    url: "https://developer.xero.com/documentation/api/items/"
- name: "Journals"
  externalDocs: 
    description: "Journals"
    url: "https://developer.xero.com/documentation/api/journals/"
- name: "LinkedTransactions"
  externalDocs: 
    description: "LinkedTransactions"
    url: "https://developer.xero.com/documentation/api/Linked-Transactions/"  
- name: "ManualJournals"
  externalDocs: 
    description: "ManualJournals"
    url: "https://developer.xero.com/documentation/api/manual-journals/" 
- name: "Organisations"
  externalDocs: 
    description: "Organsiations"
    url: "https://developer.xero.com/documentation/api/organisation/"
- name: "Overpayments"
  externalDocs: 
    description: "Overpayments"
    url: "https://developer.xero.com/documentation/api/overpayments/"
- name: "Payments"
  externalDocs: 
    description: "Payments"
    url: "https://developer.xero.com/documentation/api/payments/"
- name: "Prepayments"
  externalDocs: 
    description: "Prepayments"
    url: "https://developer.xero.com/documentation/api/prepayments/"
- name: "PurchaseOrders"
  externalDocs: 
    description: "PurchaseOrders"
    url: "https://developer.xero.com/documentation/api/purchase-orders/"
- name: "Receipts"
  externalDocs: 
    description: "Receipts"
    url: "https://developer.xero.com/documentation/api/receipts/"  
- name: "RepeatingInvoices"
  externalDocs: 
    description: "RepeatingInvoices"
    url: "https://developer.xero.com/documentation/api/repeating-invoices/"
- name: "Reports"
  externalDocs: 
    description: "Reports"
    url: "https://developer.xero.com/documentation/api/reports/"
- name: "TaxRates"
  externalDocs: 
    description: "TaxRates"
    url: "https://developer.xero.com/documentation/api/tax-rates/"
- name: "TrackingCategories"
  externalDocs: 
    description: "TrackingCategories"
    url: "https://developer.xero.com/documentation/api/tracking-categories/"
- name: "Users"
  externalDocs: 
    description: "Users"
    url: "https://developer.xero.com/documentation/api/users/"
paths:
  /Accounts:
    x-related-model: Account
    get:
      tags:
        - "Accounts"
      summary: Retrieve the full chart of accounts
      description: Retrieve the chart of accounts
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
      responses:
        '200':
          $ref: '#/responses/AccountsResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    put:
      tags:
        - "Accounts"
      summary: Create new accounts
      parameters:
        - in: body
          name: Accounts
          schema:
            $ref: '#/definitions/Account'
          required: true
      responses:
        '200':
          $ref: '#/responses/AccountsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'    
    post:
      tags:
        - "Accounts"
      summary: Create or update accounts
      parameters:
        - in: body
          name: Accounts
          schema:
            $ref: '#/definitions/Account'
          required: true
      responses:
        '200':
          $ref: '#/responses/AccountsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
  '/Accounts/{AccountID}':
    x-related-model: Account
    get:
      tags:
        - "Accounts"
      summary: Retrieve a single account
      responses:
        '200':
          $ref: '#/responses/AccountsResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
      parameters:
        - required: true
          in: path
          name: AccountID
          type: string
          format: uuid
    post:
      tags:
        - "Accounts"
      summary: Update an account
      parameters:
        - in: body
          name: Accounts
          schema:
            $ref: '#/definitions/Account'
          required: true
        - required: true
          in: path
          name: AccountID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/AccountsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
    delete:
      tags:
        - "Accounts"
      summary: Delete an account
      responses:
        '200':
          description: A successful request
        '404':
          $ref: '#/responses/404ErrorResponse'
      parameters:
        - required: true
          in: path
          name: AccountID
          type: string
          format: uuid
  '/Accounts/{AccountID}/Attachments':
    get:
      tags:
      - "Accounts"
      summary: Retrieve Attachments
      description: Retrieve Attachments
      produces:
        - application/xml
        - application/json
      parameters:
        - name: AccountID
          in: path
          description: >-
            The Xero generated unique identifier for an account
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/Accounts/{AccountID}/Attachments/{FileName}':
    get:
      tags:
      - "Accounts"
      summary: Download an Attachment
      description: Download an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          type: string
        - name: AccountID
          in: path
          description: >-
            The Xero generated unique identifier for an account
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          description: Attachment does not exist
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
      - "Accounts"
      summary: Upload an Attachment
      description: Upload an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          type: string
        - name: AccountID
          in: path
          description: >-
            The Xero generated unique identifier for an account
          required: true
          type: string
        - name: Content
          in: body
          description: The raw content of the file to be uploaded
          schema:
            $ref: '#/definitions/Content'
          required: true
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '400':
          description: Attachment couldn't be created.
        '500':
          $ref: '#/responses/500ErrorResponse'
  /BankTransactions:
    x-related-model: BankTransaction
    get:
      tags:
        - "BankTransactions"
      summary: Retrieve any spend or receive money transactions (inc. prepayments and overpayments)
      responses:
        '200':
          $ref: '#/responses/BankTransactionsResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/unitdp'
    put:
      tags:
        - "BankTransactions"
      summary: Create a new spend or receive money (inc. prepayments and overpayments)
      parameters:
        - in: body
          name: BankTransactions
          schema:
            $ref: '#/definitions/BankTransaction'
          required: true
      responses:
        '200':
          $ref: '#/responses/BankTransactionsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
        - "BankTransactions"
      summary: Create a new spend or receive money (inc. prepayments and overpayments)
      parameters:
        - in: body
          name: BankTransactions
          schema:
            $ref: '#/definitions/BankTransaction'
          required: true
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/BankTransactionsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/BankTransactions/{BankTransactionID}':
    x-related-model: BankTransaction
    get:
      tags:
       - "BankTransactions"
      summary: Retrieve a spend or receive money (inc. prepayments and overpayments)
      responses:
        '200':
          $ref: '#/responses/BankTransactionsResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: BankTransactionID
          type: string
          format: uuid
        - $ref: '#/parameters/unitdp'
    post:
      tags:
        - "BankTransactions"
      summary: Update a spend or receive money
      parameters:
        - in: body
          name: BankTransactions
          schema:
            $ref: '#/definitions/BankTransaction'
          required: true
        - required: true
          in: path
          name: BankTransactionID
          type: string
          format: uuid
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/BankTransactionsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/BankTransactions/{BankTransactionID}/Attachments':
    get:
      tags:
      - "BankTransactions"
      summary: Retrieve Attachments
      description: Retrieve Attachments
      produces:
        - application/xml
        - application/json
      parameters:
        - name: BankTransactionID
          in: path
          description: >-
            The Xero generated unique identifier for an bank transaction
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/BankTransactions/{BankTransactionID}/Attachments/{FileName}':
    get:
      tags:
      - "BankTransactions"
      summary: Download an Attachment
      description: Download an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          type: string
        - name: BankTransactionID
          in: path
          description: >-
            The Xero generated unique identifier for an bank transaction
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
      - "BankTransactions"
      summary: Upload an Attachment
      description: Upload an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          type: string
        - name: BankTransactionID
          in: path
          description: >-
            The Xero generated unique identifier for an bank transaction
          required: true
          type: string
        - name: Content
          in: body
          description: The raw content of the file to be uploaded
          schema:
            $ref: '#/definitions/Content'
          required: true
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse' 
  /BankTransfers:
    x-related-model: BankTransfer
    get:
      tags:
        - "BankTransfers"
      summary: Retrieve a colection of bank transfers
      responses:
        '200':
          $ref: '#/responses/BankTransfersResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'      
    put:
      tags:
        - "BankTransfers"
      summary: Create a bank transfer
      parameters:
        - in: body
          name: BankTransfers
          schema:
            $ref: '#/definitions/BankTransfer'
          required: true
      responses:
        '200':
          $ref: '#/responses/BankTransfersResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/BankTransfers/{BankTransferID}':
    x-related-model: BankTransfer
    get:
      tags:
        - "BankTransfers"
      summary: Retrieve an individual bank transfer
      responses:
        '200':
          $ref: '#/responses/BankTransfersResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: BankTransferID
          type: string
          format: uuid
  '/BankTransfers/{BankTransferID}/Attachments/{FileName}':
    get:
      tags:
      - "BankTransfers"
      summary: Download an Attachment
      description: Download an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          type: string
        - name: BankTransferID
          in: path
          description: >-
            The Xero generated unique identifier for an BankTransfer
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
      - "BankTransfers"
      summary: Upload an Attachment
      description: Upload an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          type: string
        - name: BankTransferID
          in: path
          description: >-
            The Xero generated unique identifier for a BankTransfer
          required: true
          type: string
        - name: Content
          in: body
          description: The raw content of the file to be uploaded
          schema:
            $ref: '#/definitions/Content'
          required: true
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  /BrandingThemes:
    x-related-model: BrandingTheme
    get:
      tags:
        - "BrandingThemes"
      summary: Retrieve a collection of BrandingThemes
      responses:
        '200':
          $ref: '#/responses/BrandingThemesResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/BrandingThemes/{BrandingThemeID}':
    x-related-model: BrandingTheme
    get:
      tags:
        - "BrandingThemes"
      summary: Retrieve an individual BrandingTheme
      responses:
        '200':
          $ref: '#/responses/BrandingThemesResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: BrandingThemeID
          type: string
          format: uuid
  /Contacts:
    x-related-model: Contact
    get:
      tags:
        - "Contacts"
      summary: 'Retrieve a collection of contacts'
      responses:
        '200':
          $ref: '#/responses/ContactsResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/includeArchived'
        - name: IDs
          in: query
          description: >-
            Filter by a comma-separated list of ContactIDs
          type: string
          required: false
    put:
      tags:
        - "Contacts"
      summary: Create a contact
      parameters:
        - in: body
          name: Contacts
          schema:
            $ref: '#/definitions/Contact'
          required: true
      responses:
        '200':
          $ref: '#/responses/ContactsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
        - "Contacts"
      summary: Create or update a contact
      parameters:
        - in: body
          name: Contacts
          schema:
            $ref: '#/definitions/Contact'
          required: true
      responses:
        '200':
          $ref: '#/responses/ContactsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/Contacts/{ContactID}':
    x-related-model: Contact
    get:
      tags:
        - "Contacts"
      summary: 'Retrieve an individual contact'
      responses:
        '200':
          $ref: '#/responses/ContactsResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ContactID
          type: string
          format: uuid
    post:
      tags:
        - "Contacts"
      summary: 'Update a contact'
      parameters:
        - in: body
          name: Contacts
          schema:
            $ref: '#/definitions/Contact'
          required: true
        - required: true
          in: path
          name: ContactID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/ContactsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/Contacts/{ContactID}/Attachments':
    get:
      tags:
      - "Contacts"
      summary: Retrieve Attachments
      description: Retrieve Attachments
      produces:
        - application/xml
        - application/json
      parameters:
        - name: ContactID
          in: path
          description: >-
            The Xero generated unique identifier for a Contact
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/Contacts/{ContactID}/Attachments/{FileName}':
    get:
      tags:
      - "Contacts"
      summary: Download an Attachment
      description: Download an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          type: string
        - name: ContactID
          in: path
          description: >-
            The Xero generated unique identifier for a Contact
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
      - "Contacts"
      summary: Upload an Attachment
      description: Upload an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          type: string
        - name: ContactID
          in: path
          description: >-
            The Xero generated unique identifier for a Contact
          required: true
          type: string
        - name: Content
          in: body
          description: The raw content of the file to be uploaded
          schema:
            $ref: '#/definitions/Content'
          required: true
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  /ContactGroups:
    x-related-model: ContactGroup
    get:
      tags:
        - "ContactGroups"
      summary: >-
        Retrieve a collection of contact groups
      responses:
        '200':
          $ref: '#/responses/ContactGroupsResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
    put:
      tags:
        - "ContactGroups"
      summary: >-
        Create a new contact group
      parameters:
        - in: body
          name: ContactGroups
          schema:
            $ref: '#/definitions/ContactGroup'
          required: true
      responses:
        '200':
          $ref: '#/responses/ContactGroupsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
        - "ContactGroups"
      summary: >-
        Create or update a contact group
      parameters:
        - in: body
          name: ContactGroups
          schema:
            $ref: '#/definitions/ContactGroup'
          required: true
      responses:
        '200':
          $ref: '#/responses/ContactGroupsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/ContactGroups/{ContactGroupID}':
    x-related-model: ContactGroup
    get:
      tags:
        - "ContactGroups"
      summary: >-
        Retrieve the ContactID and Name of all the contacts in a
        contact group
      responses:
        '200':
          $ref: '#/responses/ContactGroupsResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ContactGroupID
          type: string
          format: uuid
    post:
      tags:
        - "ContactGroups"
      summary: >-
        Update a contact group
      parameters:
        - in: body
          name: ContactGroups
          schema:
            $ref: '#/definitions/ContactGroup'
          required: true
        - required: true
          in: path
          name: ContactGroupID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/ContactGroupsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    delete:
      tags:
        - "ContactGroups"
      summary: >-
        Delete a contact group
      responses:
        '200':
          description: A successful request
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ContactGroupID
          type: string
          format: uuid
  '/ContactGroups/{ContactGroupID}/Contacts':
    x-related-model: ContactGroup
    put:
      tags:
        - "ContactGroups"
      summary: >-
        Add contacts to a contact group
      parameters:
        - in: body
          name: Contacts
          schema:
            $ref: '#/definitions/Contact'
          required: true
        - required: true
          in: path
          name: ContactGroupID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/ContactGroupsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    delete:
      tags:
        - "ContactGroups"
      summary: >-
        Remove all contacts from a contact group
      responses:
        '200':
          description: A successful request
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ContactGroupID
          type: string
          format: uuid
  '/ContactGroups/{ContactGroupID}/Contacts/{ContactID}':
    x-related-model: ContactGroup
    delete:
      tags:
        - "ContactGroups"
      summary: >-
        Remove a contact from a contact group
      responses:
        '200':
          description: A successful request
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ContactGroupID
          type: string
          format: uuid
        - required: true
          in: path
          name: ContactID
          type: string
          format: uuid
  /CreditNotes:
    x-related-model: CreditNote
    get:
      tags:
        - "CreditNotes"
      summary: Retrieve a collection of credit notes
      responses:
        '200':
          $ref: '#/responses/CreditNotesResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/unitdp'
        - $ref: '#/parameters/page'
    put:
      tags:
        - "CreditNotes"
      summary: Create a credit note
      parameters:
        - in: body
          name: CreditNotes
          schema:
            $ref: '#/definitions/CreditNote'
          required: true
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/CreditNotesResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
        - "CreditNotes"
      summary: Create or update a credit note
      parameters:
        - in: body
          name: CreditNotes
          schema:
            $ref: '#/definitions/CreditNote'
          required: true
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/CreditNotesResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/CreditNotes/{CreditNoteID}':
    x-related-model: CreditNote
    get:
      tags:
        - "CreditNotes"
      summary: Retrieve an individual credit note
      responses:
        '200':
          $ref: '#/responses/CreditNotesResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: CreditNoteID
          type: string
          format: uuid
        - $ref: '#/parameters/unitdp'
    post:
      tags:
        - "CreditNotes"
      summary: Update a credit note
      parameters:
        - in: body
          name: CreditNotes
          schema:
            $ref: '#/definitions/CreditNote'
          required: true
        - required: true
          in: path
          name: CreditNoteID
          type: string
          format: uuid
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/CreditNotesResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/CreditNotes/{CreditNoteID}/Allocations':
    x-related-model: CreditNote
    put:
      tags:
        - "CreditNotes"
      summary: Allocate a credit note
      parameters:
        - in: body
          name: Allocations
          schema:
            $ref: '#/definitions/Allocation'
          required: true
        - required: true
          in: path
          name: CreditNoteID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/CreditNotesResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/CreditNotes/{CreditNoteID}/Attachments':
    get:
      tags:
      - "CreditNotes"
      summary: Retrieve Attachments
      description: Retrieve Attachments
      produces:
        - application/xml
        - application/json
      parameters:
        - name: CreditNoteID
          in: path
          description: >-
            The Xero generated unique identifier for a CreditNote
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/CreditNotes/{CreditNoteID}/Attachments/{FileName}':
    get:
      tags:
      - "CreditNotes"
      summary: Download an Attachment
      description: Download an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          type: string
        - name: CreditNoteID
          in: path
          description: >-
            The Xero generated unique identifier for a CreditNote
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '400':
          $ref: '#/responses/400ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
      - "CreditNotes"
      summary: Upload an Attachment
      description: Upload an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          type: string
        - name: CreditNoteID
          in: path
          description: >-
            The Xero generated unique identifier for a CreditNote
          required: true
          type: string
        - name: Content
          in: body
          description: The raw content of the file to be uploaded
          schema:
            $ref: '#/definitions/Content'
          required: true
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  /Currencies:
    x-related-model: Currency
    get:
      tags:
        - "Currencies"
      summary: Retrieve the currencies the organisation is subscribed to
      responses:
        '200':
          $ref: '#/responses/CurrenciesResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
  /Employees:
    x-related-model: Employee
    get:
      tags:
        - "Employees"
      summary: >-
        Retrieve a collection of employees
      responses:
        '200':
          $ref: '#/responses/EmployeesResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
    put:
      tags:
        - "Employees"
      summary: >-
        Create employees
      parameters:
        - in: body
          name: Employees
          schema:
            $ref: '#/definitions/Employee'
          required: true
      responses:
        '200':
          $ref: '#/responses/EmployeesResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
        - "Employees"
      summary: >-
        Create or update employees
      parameters:
        - in: body
          name: Employees
          schema:
            $ref: '#/definitions/Employee'
          required: true
      responses:
        '200':
          $ref: '#/responses/EmployeesResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/Employees/{EmployeeID}':
    x-related-model: Employee
    get:
      tags:
        - "Employees"
      summary: >-
        Retrieve an individual employee
      responses:
        '200':
          $ref: '#/responses/EmployeesResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: EmployeeID
          type: string
          format: uuid
    post:
      tags:
        - "Employees"
      summary: >-
        Update an employee
      parameters:
        - in: body
          name: Employees
          schema:
            $ref: '#/definitions/Employee'
          required: true
        - required: true
          in: path
          name: EmployeeID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/EmployeesResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  /ExpenseClaims:
    x-related-model: ExpenseClaim
    get:
      tags:
        - "ExpenseClaims"
      summary: Retrieve a collection of expense claims
      responses:
        '200':
          $ref: '#/responses/ExpenseClaimsResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
    put:
      tags:
        - "ExpenseClaims"
      summary: >-
        Create an expense claim
      parameters:
        - in: body
          name: ExpenseClaims
          schema:
            $ref: '#/definitions/ExpenseClaim'
          required: true
      responses:
        '200':
          $ref: '#/responses/ExpenseClaimsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
        - "ExpenseClaims"
      summary: >-
        Create or update an expense claim
      parameters:
        - in: body
          name: ExpenseClaims
          schema:
            $ref: '#/definitions/ExpenseClaim'
          required: true
      responses:
        '200':
          $ref: '#/responses/ExpenseClaimsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/ExpenseClaims/{ExpenseClaimID}':
    x-related-model: ExpenseClaim
    get:
      tags:
        - "ExpenseClaims"
      summary: Retrieve an individual expense claim
      responses:
        '200':
          $ref: '#/responses/ExpenseClaimsResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ExpenseClaimID
          type: string
          format: uuid
    post:
      tags:
        - "ExpenseClaims"
      summary: >-
        Update an expense claim
      parameters:
        - in: body
          name: ExpenseClaims
          schema:
            $ref: '#/definitions/ExpenseClaim'
          required: true
        - required: true
          in: path
          name: ExpenseClaimID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/ExpenseClaimsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  /Invoices:
    x-related-model: Invoice
    get:
      tags:
        - "Invoices"
      summary: Retrieve a collection of invoices (sales invoices and bills)
      responses:
        '200':
          $ref: '#/responses/InvoicesResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/unitdp'
        - name: IDs
          in: query
          description: >-
            Filter by a comma-separated list of InvoiceIDs
          type: string
          required: false
        - name: ContactIDs
          in: query
          description: >-
            Filter by a comma-separated list of ContactIDs
          type: string
          required: false 
        - name: Statuses
          in: query
          description: >-
            Filter by a comma-separated list of Statuses
          type: string
          required: false
        - name: InvoiceNumbers
          in: query
          description: >-
            Filter by a comma-separated list of InvoiceNumbers
          type: string
          required: false 
    put:
      tags:
        - "Invoices"
      summary: Create an Invoice (sales invoices or bills)
      parameters:
        - in: body
          name: Invoices
          schema:
            $ref: '#/definitions/Invoice'
          required: true
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/InvoicesResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
        - "Invoices"
      summary: Create or update an Invoice (sales invoices or bills)
      parameters:
        - in: body
          name: Invoices
          schema:
            $ref: '#/definitions/Invoice'
          required: true
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/InvoicesResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/Invoices/{InvoiceID}':
    x-related-model: Invoice
    get:
      tags:
        - "Invoices"
      summary: Retrieve an Invoice (sales invoice or bill)
      responses:
        '200':
          $ref: '#/responses/InvoicesResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: InvoiceID
          type: string
          format: uuid
        - $ref: '#/parameters/unitdp'
    post:
      tags:
        - "Invoices"
      summary: Update an Invoice (sales invoice or bill)
      parameters:
        - in: body
          name: Invoices
          schema:
            $ref: '#/definitions/Invoice'
          required: true
        - required: true
          in: path
          name: InvoiceID
          type: string
          format: uuid
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/InvoicesResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/Invoices/{InvoiceID}/OnlineInvoice':
    x-related-model: OnlineInvoice
    get:
      tags:
        - "Invoices"
      summary: Retrieve the URL to view the online invoice
      responses:
        '200':
          $ref: '#/responses/OnlineInvoicesResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: InvoiceID
          type: string
          format: uuid
  '/Invoices/{InvoiceID}/Attachments':
    get:
      tags:
      - "Invoices"
      summary: Retrieve Attachments
      description: Retrieve Attachments
      produces:
        - application/xml
        - application/json
      parameters:
        - name: InvoiceID
          in: path
          description: >-
            The Xero generated unique identifier for an Invoice
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/Invoices/{InvoiceID}/Attachments/{FileName}':
    get:
      tags:
      - "Invoices"
      summary: Download an Attachment
      description: Download an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          type: string
        - name: InvoiceID
          in: path
          description: >-
            The Xero generated unique identifier for an Invoice
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
      - "Invoices"
      summary: Upload an Attachment
      description: Upload an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          type: string
        - name: InvoiceID
          in: path
          description: >-
            The Xero generated unique identifier for an Invoice
          required: true
          type: string
        - name: Content
          in: body
          description: The raw content of the file to be uploaded
          schema:
            $ref: '#/definitions/Content'
          required: true
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  /Items:
    x-related-model: Item
    get:
      tags:
        - "Items"
      summary: Retrieve a collection of items
      responses:
        '200':
          $ref: '#/responses/ItemsResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/unitdp'
    put:
      tags:
        - "Items"
      summary: Create an item
      parameters:
        - in: body
          name: Items
          schema:
            $ref: '#/definitions/Item'
          required: true
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/ItemsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
        - "Items"
      summary: Create or update an item
      parameters:
        - in: body
          name: Items
          schema:
            $ref: '#/definitions/Item'
          required: true
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/ItemsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/Items/{ItemID}':
    x-related-model: Item
    get:
      tags:
        - "Items"
      summary: Retrieve an item
      responses:
        '200':
          $ref: '#/responses/ItemsResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ItemID
          type: string
          format: uuid
        - $ref: '#/parameters/unitdp'
    post:
      tags:
        - "Items"
      summary: Update an item
      parameters:
        - in: body
          name: Items
          schema:
            $ref: '#/definitions/Item'
          required: true
        - required: true
          in: path
          name: ItemID
          type: string
          format: uuid
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/ItemsResponse'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    delete:
      tags:
        - "Items"
      summary: Delete an item
      responses:
        '200':
          description: A successful request
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: ItemID
          type: string
          format: uuid
  /Journals:
    x-related-model: Journal
    get:
      tags:
        - "Journals"
      summary: Retrieve a collection of journals.
      responses:
        '200':
          $ref: '#/responses/JournalsResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/paymentsOnly'
        - $ref: '#/parameters/offset'
  '/Journals/{JournalID}':
    x-related-model: Journal
    get:
      tags:
        - "Journals"
      summary: Retrieve an individual journal.
      responses:
        '200':
          $ref: '#/responses/JournalsResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
      parameters:
        - required: true
          in: path
          name: JournalID
          type: string
          format: uuid
  /LinkedTransactions:
    x-related-model: LinkedTransaction
    get:
      tags:
        - "LinkedTransactions"
      summary: Retrieve a collection of linked transactions (billable expenses)
      responses:
        '200':
          $ref: '#/responses/LinkedTransactionsResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/page'
        - in: query
          name: SourceTransactionID
          description: Filter by the SourceTransactionID. Get all the linked transactions created from a particular ACCPAY invoice
          type: string
          format: uuid
        - in: query
          name: ContactID
          description: Filter by the ContactID. Get all the linked transactions that have been assigned to a particular customer. 
          type: string
          format: uuid
        - in: query
          name: Status
          description: Filter by the combination of ContactID and Status. Get all the linked transactions that have been assigned to a particular customer and have a particular status e.g. GET /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED. 
          type: string
          format: uuid
        - in: query
          name: TargetTransactionID
          description: Filter by the TargetTransactionID. Get all the linked transactions allocated to a particular ACCREC invoice.
          type: string
          format: uuid
    put:
      tags:
        - "LinkedTransactions"
      summary: Create a linked transaction (billable expense)
      parameters:
        - in: body
          name: LinkedTransactions
          schema:
            $ref: '#/definitions/LinkedTransaction'
          required: true
      responses:
        '200':
          $ref: '#/responses/LinkedTransactionsResponse'
    post:
      tags:
        - "LinkedTransactions"
      summary: Create or update a linked transaction (billable expense)
      parameters:
        - in: body
          name: LinkedTransactions
          schema:
            $ref: '#/definitions/LinkedTransaction'
          required: true
      responses:
        '200':
          $ref: '#/responses/LinkedTransactionsResponse'
  '/LinkedTransactions/{LinkedTransactionID}':
    x-related-model: LinkedTransaction
    get:
      tags:
        - "LinkedTransactions"
      summary: Retrieve a linked transaction (billable expense)
      responses:
        '200':
          $ref: '#/responses/LinkedTransactionsResponse'
      parameters:
        - required: true
          in: path
          name: LinkedTransactionID
          type: string
          format: uuid
    post:
      tags:
        - "LinkedTransactions"
      summary: Update a linked transaction (billable expense)
      parameters:
        - in: body
          name: LinkedTransactions
          schema:
            $ref: '#/definitions/LinkedTransaction'
          required: true
        - required: true
          in: path
          name: LinkedTransactionID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/LinkedTransactionsResponse'
    delete:
      tags:
        - "LinkedTransactions"
      summary: Delete a linked transaction (billable expense)
      responses:
        '200':
          description: A successful request
      parameters:
        - required: true
          in: path
          name: LinkedTransactionID
          type: string
          format: uuid
  /ManualJournals:
    x-related-model: ManualJournal
    get:
      tags:
        - "ManualJournals"
      summary: Retrieve a collection of manual journals
      responses:
        '200':
          $ref: '#/responses/ManualJournalsResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/page'
    put:
      tags:
        - "ManualJournals"
      summary: Create a manual journal
      parameters:
        - in: body
          name: ManualJournals
          schema:
            $ref: '#/definitions/ManualJournal'
          required: true
      responses:
        '200':
          $ref: '#/responses/ManualJournalsResponse'
    post:
      tags:
        - "ManualJournals"
      summary: Create or update a manual journal
      parameters:
        - in: body
          name: ManualJournals
          schema:
            $ref: '#/definitions/ManualJournal'
          required: true
      responses:
        '200':
          $ref: '#/responses/ManualJournalsResponse'
  '/ManualJournals/{ManualJournalID}':
    x-related-model: ManualJournal
    get:
      tags:
        - "ManualJournals"
      summary: Retrieve an individual manual journal
      responses:
        '200':
          $ref: '#/responses/ManualJournalsResponse'
      parameters:
        - required: true
          in: path
          name: ManualJournalID
          type: string
          format: uuid
    post:
      tags:
        - "ManualJournals"
      summary: Update a manual journal
      parameters:
        - in: body
          name: ManualJournals
          schema:
            $ref: '#/definitions/ManualJournal'
          required: true
        - required: true
          in: path
          name: ManualJournalID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/ManualJournalsResponse'
  '/ManualJournals/{ManualJournalID}/Attachments':
    get:
      tags:
      - "ManualJournals"
      summary: Retrieve Attachments
      description: Retrieve Attachments
      produces:
        - application/xml
        - application/json
      parameters:
        - name: ManualJournalID
          in: path
          description: >-
            The Xero generated unique identifier for a Manual Journal
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/ManualJournals/{ManualJournalID}/Attachments/{FileName}':
    get:
      tags:
      - "ManualJournals"
      summary: Download an Attachment
      description: Download an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          type: string
        - name: ManualJournalID
          in: path
          description: >-
            The Xero generated unique identifier for a Manual Journal
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          description: Attachment does not exist
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
      - "ManualJournals"
      summary: Upload an Attachment
      description: Upload an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          type: string
        - name: ManualJournalID
          in: path
          description: >-
            The Xero generated unique identifier for a Manual Journal
          required: true
          type: string
        - name: Content
          in: body
          description: The raw content of the file to be uploaded
          schema:
            $ref: '#/definitions/Content'
          required: true
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '400':
          description: Attachment couldn't be created.
        '500':
          $ref: '#/responses/500ErrorResponse'
  /Organisation:
    x-related-model: Organisation
    get:
      tags:
        - "Organisations"
      summary: Retrieve Organisation details
      responses:
        '200':
          $ref: '#/responses/OrganisationsResponse'
  '/Organisation/{ShortCode}':
    x-related-model: Organisation
    get:
      tags:
        - "Organisations"
      summary: Retrieve Organisation details
      responses:
        '200':
          $ref: '#/responses/OrganisationsResponse'
      parameters:
        - required: true
          in: path
          name: ShortCode
          type: string
          format: uuid
  /Overpayments:
    x-related-model: Overpayment
    get:
      tags:
        - "Overpayments"
      summary: Retrieve a collection of overpayments
      responses:
        '200':
          $ref: '#/responses/OverpaymentsResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/unitdp'
  '/Overpayments/{OverpaymentID}':
    x-related-model: Overpayment
    get:
      tags:
        - "Overpayments"
      summary: Retrieve an overpayment
      responses:
        '200':
          $ref: '#/responses/OverpaymentsResponse'
      parameters:
        - required: true
          in: path
          name: OverpaymentID
          type: string
          format: uuid
        - $ref: '#/parameters/unitdp'
  '/Overpayments/{OverpaymentID}/Allocations':
    x-related-model: Overpayment
    put:
      tags:
        - "Overpayments"
      summary: Allocate an overpayment
      parameters:
        - in: body
          name: Allocations
          schema:
            $ref: '#/definitions/Allocation'
          required: true
        - required: true
          in: path
          name: OverpaymentID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/OverpaymentsResponse'
  /Payments:
    x-related-model: Payment
    get:
      tags:
        - "Payments"
      summary: Retrieve a collection of payments for invoices, credit notes, prepayments and overpayments
      responses:
        '200':
          $ref: '#/responses/PaymentsResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
    put:
      tags:
        - "Payments"
      summary: Create a payment
      parameters:
        - in: body
          name: Payments
          schema:
            $ref: '#/definitions/Payment'
          required: true
      responses:
        '200':
          $ref: '#/responses/PaymentsResponse'
    post:
      tags:
        - "Payments"
      summary: Create a payment
      parameters:
        - in: body
          name: Payments
          schema:
            $ref: '#/definitions/Payment'
          required: true
      responses:
        '200':
          $ref: '#/responses/PaymentsResponse'
  '/Payments/{PaymentID}':
    x-related-model: Payment
    get:
      tags:
        - "Payments"
      summary: Retrieve a payment
      responses:
        '200':
          $ref: '#/responses/PaymentsResponse'
      parameters:
        - required: true
          in: path
          name: PaymentID
          type: string
          format: uuid
    post:
      tags:
        - "Payments"
      summary: Update a payment's status to deleted
      parameters:
        - in: body
          name: Payments
          schema:
            $ref: '#/definitions/Payment'
          required: true
        - required: true
          in: path
          name: PaymentID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/PaymentsResponse'
  /Prepayments:
    x-related-model: Prepayment
    get:
      tags:
        - "Prepayments"
      summary: Retrieve a collection of prepayments
      responses:
        '200':
          $ref: '#/responses/PrepaymentsResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/unitdp'
  '/Prepayments/{PrepaymentID}':
    x-related-model: Prepayment
    get:
      tags:
        - "Prepayments"
      summary: Retrieve an individual prepayment
      responses:
        '200':
          $ref: '#/responses/PrepaymentsResponse'
      parameters:
        - required: true
          in: path
          name: PrepaymentID
          type: string
          format: uuid
        - $ref: '#/parameters/unitdp'
  '/Prepayments/{PrepaymentID}/Allocations':
    x-related-model: Prepayment
    put:
      tags:
        - "Prepayments"
      summary: Allocate a prepayment
      parameters:
        - in: body
          name: Allocations
          schema:
            $ref: '#/definitions/Allocation'
          required: true
        - required: true
          in: path
          name: PrepaymentID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/PrepaymentsResponse'
  /PurchaseOrders:
    x-related-model: PurchaseOrder
    get:
      tags:
        - "PurchaseOrders"
      summary: Retrieve a collection of purchase orders
      responses:
        '200':
          $ref: '#/responses/PurchaseOrdersResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/page'
        - required: false
          in: query
          name: DateFrom
          type: string
          format: date
        - required: false
          in: query
          name: DateTo
          type: string
          format: date
        - required: false
          in: query
          name: Status
          type: string
    put:
      tags:
        - "PurchaseOrders"
      summary: Create purchase orders
      parameters:
        - in: body
          name: PurchaseOrders
          schema:
            $ref: '#/definitions/PurchaseOrder'
          required: true
      responses:
        '200':
          $ref: '#/responses/PurchaseOrdersResponse'
    post:
      tags:
        - "PurchaseOrders"
      summary: Create and update purchase orders
      parameters:
        - in: body
          name: PurchaseOrders
          schema:
            $ref: '#/definitions/PurchaseOrder'
          required: true
      responses:
        '200':
          $ref: '#/responses/PurchaseOrdersResponse'
  '/PurchaseOrders/{PurchaseOrderID}':
    x-related-model: PurchaseOrder
    get:
      tags:
        - "PurchaseOrders"
      summary: Retrieve a single purchase order
      responses:
        '200':
          $ref: '#/responses/PurchaseOrdersResponse'
      parameters:
        - required: true
          in: path
          name: PurchaseOrderID
          type: string
          format: uuid
    post:
      tags:
        - "PurchaseOrders"
      summary: Update a purchase order
      parameters:
        - in: body
          name: PurchaseOrders
          schema:
            $ref: '#/definitions/PurchaseOrder'
          required: true
        - required: true
          in: path
          name: PurchaseOrderID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/PurchaseOrdersResponse'
  '/PurchaseOrders/{PurchaseOrderID}/Attachments':
    get:
      tags:
      - "PurchaseOrders"
      summary: Retrieve Attachments
      description: Retrieve Attachments
      produces:
        - application/xml
        - application/json
      parameters:
        - name: PurchaseOrderID
          in: path
          description: >-
            The Xero generated unique identifier for a purchase order
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}':
    get:
      tags:
      - "PurchaseOrders"
      summary: Download an Attachment
      description: Download an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          type: string
        - name: PurchaseOrderID
          in: path
          description: >-
            The Xero generated unique identifier for a purchase order
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          description: Attachment does not exist
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
      - "PurchaseOrders"
      summary: Upload an Attachment
      description: Upload an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          type: string
        - name: PurchaseOrderID
          in: path
          description: >-
            The Xero generated unique identifier for a purchase order
          required: true
          type: string
        - name: Content
          in: body
          description: The raw content of the file to be uploaded
          schema:
            $ref: '#/definitions/Content'
          required: true
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '400':
          description: Attachment couldn't be created.
        '500':
          $ref: '#/responses/500ErrorResponse'
  /Receipts:
    x-related-model: Receipt
    get:
      tags:
        - "Receipts"
      summary: Retrieve a collection of draft receipts
      responses:
        '200':
          $ref: '#/responses/ReceiptsResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/unitdp'
    put:
      tags:
        - "Receipts"
      summary: "Create a receipt"
      parameters:
        - in: body
          name: Receipts
          schema:
            $ref: '#/definitions/Receipt'
          required: true
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/ReceiptsResponse'
    post:
      tags:
        - "Receipts"
      summary: "Create or update a receipt"
      parameters:
        - in: body
          name: Receipts
          schema:
            $ref: '#/definitions/Receipt'
          required: true
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/ReceiptsResponse'
  '/Receipts/{ReceiptID}':
    x-related-model: Receipt
    get:
      tags:
        - "Receipts"
      summary: Retrieve an individual receipt
      responses:
        '200':
          $ref: '#/responses/ReceiptsResponse'
      parameters:
        - required: true
          in: path
          name: ReceiptID
          type: string
          format: uuid
        - $ref: '#/parameters/unitdp'
    post:
      tags:
        - "Receipts"
      summary: Update a receipt
      parameters:
        - in: body
          name: Receipts
          schema:
            $ref: '#/definitions/Receipt'
          required: true
        - required: true
          in: path
          name: ReceiptID
          type: string
          format: uuid
        - $ref: '#/parameters/unitdp'
      responses:
        '200':
          $ref: '#/responses/ReceiptsResponse'
  '/Receipts/{ReceiptID}/Attachments':
    get:
      tags:
      - "Receipts"
      summary: Retrieve Attachments
      description: Retrieve Attachments
      produces:
        - application/xml
        - application/json
      parameters:
        - name: ReceiptID
          in: path
          description: >-
            The Xero generated unique identifier for a Receipt
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/Receipts/{ReceiptID}/Attachments/{FileName}':
    get:
      tags:
      - "Receipts"
      summary: Download an Attachment
      description: Download an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          type: string
        - name: ReceiptID
          in: path
          description: >-
            The Xero generated unique identifier for a Receipt
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          description: Attachment does not exist
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      tags:
      - "Receipts"
      summary: Upload an Attachment
      description: Upload an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment being uploaded
          required: true
          type: string
        - name: ReceiptID
          in: path
          description: >-
            The Xero generated unique identifier for a Receipt
          required: true
          type: string
        - name: Content
          in: body
          description: The raw content of the file to be uploaded
          schema:
            $ref: '#/definitions/Content'
          required: true
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '400':
          description: Attachment couldn't be created.
        '500':
          $ref: '#/responses/500ErrorResponse'
  /RepeatingInvoices:
    x-related-model: RepeatingInvoice
    get:
      tags:
        - "RepeatingInvoices"
      summary: Retrieve a collection of repeating invoice templates
      responses:
        '200':
          $ref: '#/responses/RepeatingInvoicesResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/where'
  '/RepeatingInvoices/{RepeatingInvoiceID}':
    x-related-model: RepeatingInvoice
    get:
      tags:
        - "RepeatingInvoices"
      summary: Retrieve an individual repeating invoice template
      responses:
        '200':
          $ref: '#/responses/RepeatingInvoicesResponse'
      parameters:
        - required: true
          in: path
          name: RepeatingInvoiceID
          type: string
          format: uuid
  '/RepeatingInvoices/{RepeatingInvoiceID}/Attachments':
    get:
      tags:
      - "RepeatingInvoices"
      summary: Retrieve Attachments
      description: Retrieve Attachments
      produces:
        - application/xml
        - application/json
      parameters:
        - name: RepeatingInvoiceID
          in: path
          description: >-
            The Xero generated unique identifier for a RepeatingInvoice
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          $ref: '#/responses/AttachmentsResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}':
    get:
      tags:
      - "RepeatingInvoices"
      summary: Download an Attachment
      description: Download an Attachment
      produces:
        - application/xml
        - application/json
      parameters:
        - name: FileName
          in: path
          description: The filename of the attachment to be downloaded
          required: true
          type: string
        - name: RepeatingInvoiceID
          in: path
          description: >-
            The Xero generated unique identifier for a RepeatingInvoice
          required: true
          type: string
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        '200':
          description: >-
            Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        '404':
          description: Attachment does not exist
        '500':
          $ref: '#/responses/500ErrorResponse'
  /Reports:
    x-related-model: Report
    get:
      tags:
        - "Reports"
      summary: Retrieve a list of published GST reports (NZ) or BAS reports (AU)
      responses:
        '200':
          $ref: '#/responses/ReportSummaryResponse'
      produces:
        - application/xml
        - application/json
  '/Reports/{ReportID}':
    x-related-model: Reports
    get:
      tags:
        - "Reports"
      summary: Retrieve an individual BAS Report (AU) or GST Report (NZ)
      responses:
        '200':
          $ref: '#/responses/TaxReportResponse'
      parameters:
        - required: true
          in: path
          name: ReportID
          type: string
          format: uuid
  '/Reports/AgedPayablesByContact':
    x-related-model: Reports
    get:
      tags:
        - "Reports"
      summary: Retrieve an Aged Payables report for a contact
      responses:
        '200':
          $ref: '#/responses/ReportsResponse'
      parameters:
        - required: true
          in: query
          name: contactID
          type: string
          format: uuid
          description: ContactID for the contact you're running the report for
        - required: false
          in: query
          name: date
          type: string
          description: Shows payments up to this date e.g. 2014-04-30. Defaults to end of the current month
        - required: false
          in: query
          name: fromDate
          type: string
          description: Show all payable invoices from this date for contact 
        - required: false
          in: query
          name: toDate
          type: string
          description: Show all payable invoices to this date for the contact
  '/Reports/AgedReceivablesByContact':
    x-related-model: Reports
    get:
      tags:
        - "Reports"
      summary: Retrieve an Aged Receivables report for a contact
      responses:
        '200':
          $ref: '#/responses/ReportsResponse'
      parameters:
        - required: true
          in: query
          name: contactID
          type: string
          format: uuid
          description: ContactID for the contact you're running the report for
        - required: false
          in: query
          name: date
          type: string
          description: Shows payments up to this date e.g. 2014-04-30. Defaults to end of the current month
        - required: false
          in: query
          name: fromDate
          type: string
          description: Show all receivable invoices from this date for contact 
        - required: false
          in: query
          name: toDate
          type: string
          description: Show all receivable invoices to this date for the contact
  '/Reports/BalanceSheet':
    x-related-model: Reports
    get:
      tags:
        - "Reports"
      summary: Retrieve a Balance Sheet Report
      responses:
        '200':
          $ref: '#/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: date
          type: string
          format: date
          description: YYYY-MM-DD
        - required: false
          in: query
          name: trackingOptionID1
          type: string
          format: uuid
          description: Run the balance sheet for a specific tracking option
        - required: false
          in: query
          name: trackingOptionID2
          type: string
          format: uuid
          description: Run the balance sheet for a combination of two tracking options  
        - required: false
          in: query
          name: standardLayout
          type: boolean
          description: If set to true no custom report layouts will be applied to response
        - required: false
          in: query
          name: paymentsOnly
          type: boolean
          description: Set this to true to get cash transactions only
  '/Reports/BankStatement':
    x-related-model: Reports
    get:
      tags:
        - "Reports"
      summary: Returns the statement lines for a specified bank account
      responses:
        '200':
          $ref: '#/responses/ReportsResponse'
      parameters:
        - required: true
          in: query
          name: bankAccountID
          type: string
          format: uuid
          description: bankAccountID e.g. 5040915e-8ce7-4177-8d08-fde416232f18
        - required: false
          in: query
          name: fromDate
          type: string
          description: YYYY-MM-DD
        - required: false
          in: query
          name: toDate
          type: string
          description: YYYY-MM-DD
  '/Reports/BankSummary':
    x-related-model: Reports
    get:
      tags:
        - "Reports"
      summary: Returns the balances and cash movements for each bank account
      responses:
        '200':
          $ref: '#/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: fromDate
          type: string
          description: YYYY-MM-DD
        - required: false
          in: query
          name: toDate
          type: string
          description: YYYY-MM-DD
  '/Reports/BudgetSummary':
    x-related-model: Reports
    get:
      tags:
        - "Reports"
      summary: Returns a summary of your monthly budget
      responses:
        '200':
          $ref: '#/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: date
          type: string
          description: YYYY-MM-DD
        - required: false
          in: query
          name: periods
          type: integer
          description: The number of periods to compare (integer between 1 and 12)
        - required: false
          in: query
          name: timeframe
          type: integer
          description: The period size to compare to (1=month, 3=quarter, 12=year)
  '/Reports/ExecutiveSummary':
    x-related-model: Reports
    get:
      tags:
        - "Reports"
      summary: A summary including monthly totals and some common business ratios
      responses:
        '200':
          $ref: '#/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: date
          type: string
          description: YYYY-MM-DD
  '/Reports/ProfitAndLoss':
    x-related-model: Reports
    get:
      tags:
        - "Reports"
      summary: Returns a profit and loss for the current month by default. An alternate date range can also be specified using the optional parameters listed below.
      responses:
        '200':
          $ref: '#/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: fromDate
          type: string
          description: YYYY-MM-DD
        - required: false
          in: query
          name: toDate
          type: string
          description: YYYY-MM-DD
        - required: false
          in: query
          name: trackingCategoryID
          type: string
          description:  If you specify the trackingCategoryID parameter then the Profit and Loss Report will show figures for each of the options in the category as separate columns. See the Profit and Loss Report in Xero to learn more about this behavior when filtering by a tracking category.
        - required: false
          in: query
          name: trackingOptionID
          type: string
          description: If you specify this parameter in addition to the trackingCategoryID then just one option will be returned (i.e. 1 column only)
        - required: false
          in: query
          name: trackingCategoryID2
          type: string
          description: If you specify a second trackingCategoryID parameter then the Profit and Loss Report will show figures for each combination of options from the two categories as separate columns. See the Profit and Loss Report in Xero to learn more about this behaviour when filtering by two tracking categories.
        - required: false
          in: query
          name: trackingOptionID2
          type: string
          description: If you specify this parameter in addition to a second trackingCategoryID then just one option will be returned combined with the option/s from the first tracking category
        - required: false
          in: query
          name: standardLayout
          type: boolean
          description: If you set this parameter to "true" then no custom report layouts will be applied to response
        - required: false
          in: query
          name: paymentsOnly
          type: string
          description: Set this to true to get cash transactions only
  '/Reports/TrialBalance':
    x-related-model: Reports
    get:
      tags:
        - "Reports"
      summary: Returns a trial balance for the current month up to the date specified. YTD values are shown too.
      responses:
        '200':
          $ref: '#/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: Date
          type: string
          description: YYYY-MM-DD
        - required: false
          in: query
          name: paymentsOnly
          type: string
          description: Set this to true to get cash transactions only      
  '/Reports/TenNinetyNine':
    x-related-model: Reports
    get:
      tags:
        - "Reports"
      summary: Retrieve a 1099 Report (US only)
      responses:
        '200':
          $ref: '#/responses/ReportsResponse'
      parameters:
        - required: false
          in: query
          name: reportYear
          type: string
          description: Year of the report e.g. 2013
  /TaxRates:
    x-related-model: TaxRate
    get:
      tags:
        - "TaxRates"
      summary: Retrieve a collection of tax rates
      responses:
        '200':
          $ref: '#/responses/TaxRatesResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/where'
    put:
      tags:
        - "TaxRates"
      summary: Create tax rates
      parameters:
        - in: body
          name: TaxRates
          schema:
            $ref: '#/definitions/TaxRate'
          required: true
      responses:
        '200':
          $ref: '#/responses/TaxRatesResponse'
    post:
      tags:
        - "TaxRates"
      summary: Create or update tax rates
      parameters:
        - in: body
          name: TaxRates
          schema:
            $ref: '#/definitions/TaxRate'
          required: true
      responses:
        '200':
          $ref: '#/responses/TaxRatesResponse'
  /TrackingCategories:
    x-related-model: TrackingCategory
    get:
      tags:
        - "TrackingCategories"
      summary: Retrieve a collection of tracking categories and options
      responses:
        '200':
          $ref: '#/responses/TrackingCategoriesResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/where'
        - $ref: '#/parameters/includeArchived'
    put:
      tags:
        - "TrackingCategories"
      summary: Create a tracking category
      parameters:
        - in: body
          name: TrackingCategories
          schema:
            $ref: '#/definitions/TrackingCategory'
          required: true
      responses:
        '200':
          $ref: '#/responses/TrackingCategoriesResponse'
    post:
      tags:
        - "TrackingCategories"
      summary: Create a tracking category
      parameters:
        - in: body
          name: TrackingCategories
          schema:
            $ref: '#/definitions/TrackingCategory'
          required: true
      responses:
        '200':
          $ref: '#/responses/TrackingCategoriesResponse'
  '/TrackingCategories/{TrackingCategoryID}':
    x-related-model: TrackingCategory
    get:
      tags:
        - "TrackingCategories"
      summary: Retrieve a tracking category and it's options
      responses:
        '200':
          $ref: '#/responses/TrackingCategoriesResponse'
      parameters:
        - required: true
          in: path
          name: TrackingCategoryID
          type: string
          format: uuid
    post:
      tags:
        - "TrackingCategories"
      summary: Create or update a tracking category
      parameters:
        - in: body
          name: TrackingCategories
          schema:
            $ref: '#/definitions/TrackingCategory'
          required: true
        - required: true
          in: path
          name: TrackingCategoryID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/TrackingCategoriesResponse'
    delete:
      tags:
        - "TrackingCategories"
      summary: "Delete a Tracking Category"
      responses:
        '200':
          description: A successful request
      parameters:
        - required: true
          in: path
          name: TrackingCategoryID
          type: string
          format: uuid
  '/TrackingCategories/{TrackingCategoryID}/Options':
    x-related-model: TrackingCategory
    put:
      tags:
        - "TrackingCategories"
      summary: "Add options to a tracking category"
      parameters:
        - in: body
          name: TrackingOptions
          schema:
            $ref: '#/definitions/TrackingOption'
          required: true
        - required: true
          in: path
          name: TrackingCategoryID
          type: string
          format: uuid
      responses:
        '200':
          $ref: '#/responses/TrackingCategoriesResponse'
  '/TrackingCategories/{TrackingCategoryID}/Options/{TrackingOptionID}':
    x-related-model: TrackingCategory
    delete:
      tags:
        - "TrackingCategories"
      summary: "Delete an option from a tracking category"
      responses:
        '200':
          description: A successful request
      parameters:
        - required: true
          in: path
          name: TrackingCategoryID
          type: string
          format: uuid
        - required: true
          in: path
          name: TrackingOptionID
          type: string
          format: uuid
  /Users:
    x-related-model: User
    get:
      tags:
        - "Users"
      summary: Retrieve a collection of Users
      responses:
        '200':
          $ref: '#/responses/UsersResponse'
      produces:
        - application/xml
        - application/json
      parameters:
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/where'
  '/Users/{UserID}':
    x-related-model: User
    get:
      tags:
        - "Users"
      summary: Retrieve an individual User
      responses:
        '200':
          $ref: '#/responses/UsersResponse'
      parameters:
        - required: true
          in: path
          name: UserID
          type: string
          format: uuid
definitions:
  Account:
    type: object
    required:
      - Code
      - Name
      - Type
    properties:
      Code:
        type: string
        description: Customer defined alpha numeric account code e.g 200 or SALES
        maxLength: 10
        example: 200
      Name:
        type: string
        description: Name of account
        maxLength: 150
        example: Sales
      Type:
        type: string
        description: Account type
        example: CURRENT
        enum:
          - BANK
          - CURRENT
          - CURRLIAB
          - DEPRECIATN
          - DIRECTCOSTS
          - EQUITY
          - EXPENSE
          - FIXED
          - INVENTORY
          - LIABILITY
          - NONCURRENT
          - OTHERINCOME
          - OVERHEADS
          - PREPAYMENT
          - REVENUE
          - SALES
          - TERMLIAB
          - PAYGLIABILITY
          - SUPERANNUATIONEXPENSE
          - SUPERANNUATIONLIABILITY
          - WAGESEXPENSE
          - WAGESPAYABLELIABILITY
      BankAccountNumber:
        type: string
        description: For bank accounts only (Type BANK)
        example: 1234353453453
      Status:
        type: string
        description: Accounts with a status of ACTIVE can be updated to ARCHIVED
        example: ACTIVE
        enum:
          - ACTIVE
          - ARCHIVED
      Description:
        type: string
        description: Description of the Account. Valid for all types of accounts except bank accounts 
        maxLength: 4000
        example: A sales account
      BankAccountType:
        type: string
        description: For bank accounts only
        example: CREDITCARD
        enum:
          - BANK
          - CREDITCARD
          - PAYPAL
      CurrencyCode:
        type: string
        description: For bank accounts only
        example: AUD
      TaxType:
        type: string
        description: Default tax rate for the account
        example: NONE
      EnablePaymentsToAccount:
        type: boolean
        example: false
        description: Describes whether account can have payments applied to it
      ShowInExpenseClaims:
        type: boolean
        example: false
        description: Describes whether account code is available for use with expense claims
      AccountID:
        type: string
        format: uuid
        description: Unique identifier for the account
        readOnly: true
        example: 50e845c3-464e-4a6d-8951-8794317c7893
      Class:
        type: string
        description: The class of account
        readOnly: true
        example: ASSET
        enum:
          - ASSET
          - EQUITY
          - EXPENSE
          - LIABILITY
          - REVENUE
      SystemAccount:
        type: string
        description: If this is a system account then this element is returned. See System
          Account types. Note that non-system accounts may have this element set
          as either “” or null.
        readOnly: true
        example: ROUNDING
        enum: 
          - DEBTORS
          - CREDITORS
          - BANKCURRENCYGAIN
          - GST
          - GSTONIMPORTS
          - HISTORICAL
          - REALISEDCURRENCYGAIN
          - RETAINEDEARNINGS
          - ROUNDING
          - TRACKINGTRANSFERS
          - UNPAIDEXPCLM
          - UNREALISEDCURRENCYGAIN
          - WAGEPAYABLES
      ReportingCode:
        type: string
        description: Shown if set
        example: ASS
        readOnly: true
      ReportingCodeName:
        type: string
        description: Shown if set
        example: Asset
        readOnly: true
      HasAttachments:
        type: boolean
        description: Indicates if an account has an attachment
        example: false
        readOnly: true
      UpdatedDateUTC:
        type: string
        format: date-time
        description: Last modified date UTC format
        readOnly: true
  Address:
    type: object
    properties:
      AddressType:
        type: string
        description: The address type
        example: POSTAL
        enum:
          - POBOX
          - STREET
          - POSTAL
      AddressLine1:
        type: string
        example: Apartment A
        maxLength: 500
      AddressLine2:
        type: string
        example: Building 20
        maxLength: 500
      AddressLine3:
        type: string
        example: 123 Main St
        maxLength: 500
      AddressLine4:
        type: string
        example: South
        maxLength: 500
      City:
        type: string
        example: New York City
        maxLength: 255
      Region:
        type: string
        example: New York
        maxLength: 500
      PostalCode:
        type: string
        example: 47483
        maxLength: 50
      Country:
        type: string
        example: United States
        maxLength: 50
      Attentionto:
        type: string
        example: Accounts Department
        maxLength: 255
  Allocation:
    type: object
    required:
      - Invoice
      - AppliedAmount
      - Date
    properties:
      Invoice:
        type: object
        properties:
          InvoiceId:
            type: string
            format: uuid
            example: 2edbb726-f6ad-41e4-8e00-f84550b8a455
      AppliedAmount:
        description: the amount being applied to the invoice
        type: number
        format: float
      Date:
        description: >-
          The date the prepayment is applied YYYY-MM-DD (read-only). This will
          be the latter of the invoice date and the prepayment date.
        type: string
        format: date
        readOnly: true
  Attachment:
    type: object
    properties:
      AttachmentId:
        type: string
        format: uuid
        description: Xero generated unique identifier for attachment
        example: a04bf353-4d9a-4bda-8c1e-db1274164ee
      Filename:
        type: string
        description: The filename of the attachemnt
        example: my-receipt.jpg
      Url:
        type: string
        description: The URL to where the attachment is located
        example: https://api.xero.com/api.xro/2.0/Receipts/e59a2c7f-4078-a0f3-73537afcbba9/Attachments/my-receipt.jpg
      MimeType:
        type: string
        description: The mimetype of the attachemnt
        example: image/jpg
      ContentLegth:
        type: integer
        description: The content length in bytes
        example: 6384
      IncludeOnline:
        type: boolean
        description: Determines whether the attachment is included with the online invoice
        example: true
  Balances:
    type: array
    description: The raw AccountsReceivable (sales invoices) and AccountsPayable (bills) outstanding and overdue amounts, not converted to base currency
    readOnly: true
    items:
      properties:
        AccountsReceivable:
          type: object
          properties:
            Outstanding:
              type: number
              format: float
              description: AR outstanding balance
              readOnly: true
              example: 1000
            Overdue:
              type: number
              format: float
              description: AR overdue balance
              readOnly: true
              example: 500
        AccountsPayable:
          type: object
          properties:
            Outstanding:
              type: number
              format: float
              description: AP outstanding balance
              readOnly: true
              example: 50
            Overdue:
              type: number
              format: float
              description: AP overdue balance
              readOnly: true
              example: 2
  BankAccount:
    type: object
    properties:
      Code:
        type: string
        description: Bank account code
        example: 610
      AccountID:
        type: string
        format: uuid
        description: Account identifier
        example: d1ebb97b-d207-4ccb-9ab6-8a466a8b4d39
      Name:
        description: The Name Bank Account
        readOnly: true
        type: string
        example: Everyday Savings
  FromBankAccount:
    type: object
    properties:
      Code:
        type: string
        description: Bank account code
        example: 610
      AccountID:
        type: string
        format: uuid
        description: Account identifier
        example: ae8074e0-1ac1-4b37-8546-afa9fa6ace9e
      Name:
        type: string
        description: Bank account name
        example: Savings account
  ToBankAccount:
    type: object
    properties:
      Code:
        type: string
        description: Bank account code
        example: 610
      AccountID:
        type: string
        format: uuid
        description: Account identifier
      Name:
        type: string
        description: Bank account name
        example: Savings account
  BankTransaction:
    type: object
    required:
      - Type
      - Contact
      - LineItems
      - BankAccount
    properties:
      BankTransactionId:
        type: string
        format: uuid
        description: Xero generated unique identifier for bank transactions
        readOnly: true
        example: 72f1dcfe-5d7d-4239-bf9d-e12469309716
      Type:
        type: string
        description: The type of bank transaction
        enum:
          - RECEIVE
          - RECEIVE-OVERPAYMENT
          - RECEIVE-PREPAYMENT
          - SPEND
          - SPEND-OVERPAYMENT
          - SPEND-PREPAYMENT
          - RECEIVE-TRANSFER
          - SPEND-TRANSFER
        example: SPEND 
      BankAccount:
        $ref: '#/definitions/BankAccount'
      IsReconciled:
        type: boolean
        description: Indicates if transaction has been reconciled
        example: false
      Reference:
        type: string
        description:   Reference for the transaction. Only supported for SPEND and RECEIVE transactions
        example: ABC123
      Contact:
        $ref: '#/definitions/Contact'
      Date:
        type: string
        format: date
        description: Date bank transaction was made YYYY-MM-DD
      Status:
        type: string
        enum:
          - AUTHORISED
          - DELETED
        default: AUTHORISED
        description: The status of the bank transaction
      LineAmountTypes:
        type: string
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        description: >-
          Line amounts are exclusive of tax by default if you don’t specify this
          element
        default: NoTax
      LineItems:
        $ref: '#/definitions/LineItems'
      Url:
        type: string
        description: >-
          URL link to a source document – shown as “Go to [appName]” in the Xero app
        example: https://yourapp.com/transactions/ABC123
      CurrencyCode:
        type: string
        description: The currency that bank transaction has been raised in
        example: AUD
      CurrencyRate:
        type: number
        format: float
        description: >-
          The currency rate for a multicurrency bank transaction. If no rate is specified, the XE.com day rate is used.
      SubTotal:
        type: number
        format: float
        description: Total of bank transaction excluding taxes
        readOnly: true
      Totaltax:
        type: number
        format: float
        description: Total tax on the bank transaction
        readOnly: true
      Total:
        type: number
        format: float
        description: >-
          Total of bank transaction tax inclusive (i.e. SubTotal + TotalTax). This will be ignored if it doesn’t equal the sum of the LineAmounts
        readOnly: true
      PrepaymentID:
        type: string
        format: uuid
        description: Xero generated unique identifier for a Prepayment. This will be returned on BankTransactions with a Type of SPEND-PREPAYMENT or RECEIVE-PREPAYMENT
        example: d2c63bbd-bc9e-4fb4-9d1c-e5d15749aaa2
        readOnly: true
      OverpaymentID:
        type: string
        format: uuid
        description: Xero generated unique identifier for an Overpayment. This will be returned on BankTransactions with a Type of SPEND-OVERPAYMENT or RECEIVE-OVERPAYMENT
        example: 66fbdc01-e2e7-4ee3-ab10-2d5821d38fe4
        readOnly: true
      UpdatedDateUTC:
        type: string
        format: date-time
        description: Last modified date UTC format
        readOnly: true
      HasAttachments:
        type: boolean
        description: boolean to indicate if the bank transaction has an attachment
        readOnly: true
      Attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
    xml:
      name: BankTransaction
  BankTransfer:
    type: object
    required:
      - FromBankAccount
      - ToBankAccount
      - Amount
    properties:
      BankTransferId:
        type: string
        format: uuid
        description: Xero generated unique identifier for bank transfers
        readOnly: true
        example: 72f1dcfe-5d7d-4239-bf9d-e12469309716
      FromBankAccount:
        $ref: '#/definitions/FromBankAccount'
      ToBankAccount:
        $ref: '#/definitions/ToBankAccount'
      Date:
        type: string
        format: date
        description: Date bank transfer was made YYYY-MM-DD
      CurrencyRate:
        type: number
        format: float
        description: >-
          The currency rate for a multicurrency bank transfer. If no rate is
          specified, the XE.com day rate is used.
      Amount:
        type: number
        format: float
        description: >-
          Total of the bank transfer
      FromBankTransactionID:
        type: string
        format: uuid
        description: The Bank Transaction ID for the source account
        example: d2c63bbd-bc9e-4fb4-9d1c-e5d15749aaa2
        readOnly: true
      ToBankTransactionID:
        type: string
        format: uuid
        description: The Bank Transaction ID for the destination account
        example: 66fbdc01-e2e7-4ee3-ab10-2d5821d38fe4
        readOnly: true
      UpdatedDateUTC:
        type: string
        format: date-time
        description: Last modified date UTC format
        readOnly: true
      HasAttachments:
        type: boolean
        description: boolean to indicate if the bank transaction has an attachment
        readOnly: true
      Attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
    xml:
      name: BankTransfer
  BrandingTheme:
    type: object
    readOnly: true
    properties:
      BrandingThemeID:
        description: Xero identifier
        type: string
        format: uuid
        readOnly: true
      Name:
        description: Name of branding theme
        type: string
        example: VIP Customer Theme
        readOnly: true
      SortOrder:
        description: >-
          Integer – ranked order of branding theme. The default branding theme
          has a value of 0
        type: integer
        readOnly: true
      CreatedDateUTC:
        description: UTC timestamp of creation date of branding theme
        type: string
        format: date-time
        readOnly: true
  BatchPayments:
    type: object
    readOnly: true
    properties:
      BankAccountNumber:
        type: string
        readOnly: true
        example: 098765 123456
      BankAccountName:
        type: string
        readOnly: true
        example: Globo Bank
      Details:
        type: string
        readOnly: true
        example: Stuff about the account
  Contact:
    type: object
    required:
      - Name
    properties:
      ContactID:
        type: string
        format: uuid
        description: Xero identifier
        example: "cc04bc53-f094-4ed6-8b3e-67297c37fae0"
        readOnly: true
      Name:
        type: string
        maxLength: 255
        description: Full name of contact/organisation
        example: Adam Moore
      AccountNumber:
        type: string
        maxLength: 50
        description: A user defined account number. This can be updated via the API and the Xero UI.
        example: AM123
      ContactStatus:
        type: string
        description: Current status of a contact 
        enum:
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
      FirstName:
        type: string
        description: First name of contact person
        maxLength: 255
        example: Adam
      LastName:
        type: string
        description: Last name of contact person
        maxLength: 255
        example: Moore
      EmailAddress:
        type: string
        description: Email address of contact person (umlauts not supported) 
        maxLength: 255
        example: adam@moore.com
      SkypeUserName:
        type: string
        description: Skype user name of contact 
        example: adamm
      ContactPersons:
        $ref: '#/definitions/ContactPersons'
      BankAccountDetails:
        type: string
        description: Bank account number of contact
        example: 061844 8474733
      TaxNumber:
        type: string
        description: Tax number of contact – this is also known as the ABN (Australia), GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and global) in the Xero UI depending on which regionalized version of Xero you are using.
        maxLength: 50
        example: GB12345667
      AccountsReceivableTaxType:
        type: string
        description: Default tax type used for contact on AR invoices
        example: NONE
      AccountsPayableTaxType:
        type: string
        description: Default tax type used for contact on AP invoices
        example: NONE
      Addresses:
        description: Address details for the contact
        type: array
        items:
          $ref: '#/definitions/Address'
      Phones:
        $ref: '#/definitions/Phones'
      IsSupplier:
        type: boolean
        description: Boolean that describes if a contact that has any AP invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts payable invoice is generated against this contact.
        example: true
        readOnly: true
      IsCustomer:
        type: boolean
        description: Boolean that describes if a contact has any AR invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts receivable invoice is generated against this contact.
        example: true
        readOnly: true
      DefaultCurrency:
        type: string
        description: Default currency for raising invoices against contact
        example: AUD
      XeroNetworkKey:
        type: string
        description: Store XeroNetworkKey for contacts.
        example: J57MXL9Z3GULYFR9CUBSKZGVRTBCAL
      SalesDefaultAccountCode:
        type: string
        description: The default sales account code for contacts
        example: 200
      PurchasesDefaultAccountCode:
        type: string
        description: The default purchases account code for contacts
        example: 420
      SalesTrackingCategories:
        $ref: '#/definitions/SalesTrackingCategories'
      PurchasesTrackingCategories:
        $ref: '#/definitions/PurchasesTrackingCategories'
      PaymentTerms:
        $ref: '#/definitions/PaymentTerms'
      UpdatedDateUTC:
        type: string
        format: date-time
        description: Last modified date UTC format
        readOnly: true
      ContactGroups:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/ContactGroup'
      Website:
        type: string
        description: Website address for contact 
        readOnly: true
        example: www.contact.com
      BrandingTheme:
        $ref: '#/definitions/BrandingTheme'
      BatchPayments:
        $ref: '#/definitions/BatchPayments'
      Balances:
        $ref: '#/definitions/Balances' 
      HasAttachments:
        type: boolean
        description: A boolean to indicate if a contact has an attachment
        readOnly: true
        example: true
    xml:
      name: Contact
  ContactGroup:
    type: object
    required: 
      - Name
    properties:
      ContactGroupID:
        type: string
        format: uuid
        description: Unique identifier for the contact group
        readOnly: true
        example: 50e845c3-464e-4a6d-8951-8794317c7893
      Name:
        type: string
        description: Name of the contact group
        example: Training
      Status:
        type: string
        description: The status of the contact group
        example: ACTIVE
        enum:
          - ACTIVE
          - DELETED
  ContactPerson:
    type: object
    properties:
      FirstName:
        type: string
        description: First name of person
        example: Aaron
      LastName:
        type: string
        description: Last name of person
        example: Muir
      EmailAddress:
        type: string
        description: Email address of person
        example: aaron@muir.com
      IncludeInEmails:
        type: boolean
        description: Boolean to indicate whether contact should be included on emails with invoices etc.
        example: true
  ContactPersons:
    type: array
    items:
      $ref: '#/definitions/ContactPerson'
  Currency:
    type: object
    properties:
      Code:
        description: 3 letter alpha code for the currency – see list of currency codes
        type: string
        example: AUD
        readOnly: true
      Description:
        description: Name of Currency
        type: string
        example: Australian Dollar
        readOnly: true
  CreditNote:
    type: object
    required:
      - Type
      - Contact
      - LineItems
    properties:
      Type:
        description: The type of Credit Note
        type: string
        enum:
          - ACCPAYCREDIT
          - ACCRECCREDIT
      Contact:
        $ref: '#/definitions/Contact'
      Date:
        description: >-
          The date the credit note is issued YYYY-MM-DD. If the Date element is not specified then it will default to the current date based on the timezone setting of the organisation
        type: string
        format: date
      Status:
        description: The Credit Note status
        type: string
        enum:
          - DRAFT
          - SUBMITTED
          - AUTHORISED
          - PAID
          - VOIDED
          - DELETED
      LineAmountTypes:
        description: How tax is applied on the line items
        type: string
        enum:
          - Inclusive
          - Exclusive
          - NoTax
      LineItems:
        type: array
        items:
          $ref: '#/definitions/LineItem'
      SubTotal:
        description: The subtotal of the credit note excluding taxes
        type: number
        format: float
        readOnly: true
      TotalTax:
        description: The total tax on the credit note
        type: number
        format: float
        readOnly: true
      Total:
        description: The total of the Credit Note(subtotal + total tax)
        type: number
        format: float
        readOnly: true
      UpdatedDateUTC:
        description: UTC timestamp of last update to the credit note
        type: string
        format: date-time
        readOnly: true
      CurrencyCode:
        description: Currency used for the Credit Note
        type: string
        example: AUD
      FullyPaidOnDate:
        description: Date when credit note was fully paid
        type: string
        format: date
        readOnly: true
      CreditNoteID:
        description: Xero generated unique identifier
        type: string
        format: uuid
        readOnly: true
      CreditNoteNumber:
        description: >-
          ACCRECCREDIT – Unique alpha numeric code identifying credit note (when missing will auto-generate from your Organisation Invoice Settings)
        type: string
        example: CN-123
      Reference:
        description: ACCRECCREDIT only – additional reference number
        type: string
        example: ABC123
      SentToContact:
        description: >-
          boolean to indicate if a credit note has been sent to a contact via
          the Xero app (currently read only)
        readOnly: true
        type: boolean
      CurrencyRate:
        description: >-
          The currency rate for a multicurrency invoice. If no rate is
          specified, the XE.com day rate is used
        type: number
        format: float
      RemainingCredit:
        description: The remaining credit balance on the Credit Note
        type: number
        format: float
        readOnly: true
      Allocations:
        description: Transactions the credit note has been allocated to
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/Allocation'
      BrandingThemeID:
        description: The identifier for the branding theme applied to the credit note
        type: string
        format: uuid
      HasAttachments:
        description: boolean to indicate if a credit note has an attachment
        type: boolean
        readOnly: true
  Content:
    type: object
    required:
      - Content
    properties:
      Content:
        type: string
        description: The raw file content
        example: "23456238745623865897326457634259763425976342596"
  Employee:
    type: object
    required:
      - FirstName
      - LastName
    properties:
      EmployeeID:
        description: |-
          The Xero identifier for an employee
          e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9
        type: string
        format: uuid
        readOnly: true
      Status:
        description: Current status of an employee
        type: string
        enum:
          - ACTIVE
          - ARCHIVED
      FirstName:
        description: First name of an employee (max length = 255)
        maxLength: 255
        type: string
        example: Adam
      LastName:
        description: Last name of an employee (max length = 255)
        maxLength: 255
        type: string
        example: Moore
      ExternalLink:
        type: object
        allOf:
          - description: >-
              Link to an external resource, for example, an employee record in
              an external system. You can specify the URL element.

              The description of the link is auto-generated in the form “Go to
              <App name>”. <App name> refers to the Xero application name that
              is making the API call.
          - $ref: '#/definitions/ExternalLink'
  ExpenseClaim:
    type: object
    properties:
      User:
        $ref: '#/definitions/User'
      Receipts:
        description: The Receipts in the expense claim
        type: array
        items:
          $ref: '#/definitions/Receipt'
      ExpenseClaimID:
        description: Xero generated unique identifier for an expense claim
        readOnly: true
        type: string
        format: uuid
      Payments:
        description: Payments applied to the expense claim
        readOnly: true
        type: array
        items:
          $ref: '#/definitions/Payment'
      Status:
        description: Current status of an expense claim – see status types
        type: string
        enum:
          - SUBMITTED
          - AUTHORISED
          - PAID
      UpdatedDateUTC:
        description: Last modified date UTC format
        readOnly: true
        type: string
        format: date-time
      Total:
        description: The total of an expense claim being paid
        readOnly: true
        type: number
        format: float
      AmountDue:
        description: The amount due to be paid for an expense claim
        readOnly: true
        type: number
        format: float
      AmountPaid:
        description: The amount still to pay for an expense claim
        readOnly: true
        type: number
        format: float
      PaymentDueDate:
        description: The date when the expense claim is due to be paid YYYY-MM-DD
        readOnly: true
        type: string
        format: date
      ReportingDate:
        description: The date the expense claim will be reported in Xero YYYY-MM-DD
        readOnly: true
        type: string
        format: date
    required:
      - User
      - Receipts
  ExternalLink:
    type: object
    properties:
      LinkType:
        description: See External link types
        type: string
        enum:
          - Facebook
          - GooglePlus
          - LinkedIn
          - Twitter
          - Website
      Url:
        description: URL for service
        type: string
        example: http://twitter.com/xeroapi
  Invoice:
    type: object
    required:
      - Type
      - Contact
      - LineItems
    properties:
      InvoiceId:
        type: string
        format: uuid
        description: Xero generated unique identifier for invoice
        readOnly: true
      Type:
        type: string
        description: ACCREC (for sales) or ACCPAY (for bills)
        enum:
          - ACCREC
          - ACCPAY
      InvoiceNumber:
        type: string
        description: |
          User defined alphanumeric code for identifying invoices. 
          - Unique for ACCREC but not for ACCPAY. 
          - For ACCREC it will auto-generate when left blank. 
          - For ACCPAY it displays as Reference in the UI.
        example: INV-123
      Reference:
        type: string
        description: ACCREC only – additional reference number
        example: REF-123
      Contact:
        $ref: '#/definitions/Contact'
      Date:
        type: string
        format: date
        description: Date invoice was issued YYYY-MM-DD
      DueDate:
        type: string
        format: date
        description: Date the invoice is due to be paid YYYY-MM-DD
      Status:
        type: string
        enum:
          - DRAFT
          - SUBMITTED
          - AUTHORISED
          - PAID
          - VOIDED
          - DELETED
        default: DRAFT
        description: The status of the invoice
      LineAmountTypes:
        type: string
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        description: >-
          Line amounts are exclusive of tax by default if you don’t specify this
          element
        default: NoTax
      LineItems:
        $ref: '#/definitions/LineItems'
      BrandingThemeID:
        type: string
        format: uuid
        description: The identifier for the branding theme applied to the invoice
      Url:
        type: string
        description: >-
          URL link to a source document – shown as “Go to [appName]” in the Xero
          app
        example: https://myapp.com/INV-123
      CurrencyCode:
        type: string
        description: The currency that invoice has been raised in
        example: AUD
      CurrencyRate:
        type: number
        format: float
        description: >-
          The currency rate for a multicurrency invoice. If no rate is
          specified, the XE.com day rate is used.
      SentToContact:
        type: boolean
        description: >-
          Boolean to set whether the invoice in the Xero app should be marked as
          “sent”. This can be set only on invoices that have been approved
        default: false
      ExpectedPaymentDate:
        type: string
        format: date
        description: Shown on sales invoices (Accounts Receivable) when this has been set
      PlannedPaymentDate:
        type: string
        format: date
        description: Shown on bills (Accounts Payable) when this has been set
      SubTotal:
        type: number
        format: float
        description: Total of invoice excluding taxes
        readOnly: true
      Totaltax:
        type: number
        format: float
        description: Total tax on the invoice
        readOnly: true
      Total:
        type: number
        format: float
        description: >-
          Total of Invoice tax inclusive (i.e. SubTotal + TotalTax). This will
          be ignored if it doesn’t equal the sum of the LineAmounts
        readOnly: true
      TotalDiscount:
        type: number
        format: float
        description: Total of discounts applied on the invoice line items
        readOnly: true
      AmountDue:
        type: number
        format: float
        description: Amount remaining to be paid on invoice
        readOnly: true
      AmountPaid:
        type: number
        format: float
        description: Sum of payments received for invoice
        readOnly: true
      FullyPaidOnDate:
        type: string
        format: date
        description: >-
          The date the invoice was fully paid. Only returned on fully paid
          invoices
        readOnly: true
      AmountCredited:
        type: number
        format: float
        description: >-
          Sum of all credit notes, over-payments and pre-payments applied to
          invoice
        readOnly: true
      UpdatedDateUTC:
        type: string
        format: date-time
        description: Last modified date UTC format
        readOnly: true
      HasAttachments:
        type: boolean
        description: boolean to indicate if an invoice has an attachment
        readOnly: true
      Attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      Payments:
        type: array
        items:
          $ref: '#/definitions/Payment'
      CreditNotes:
        type: array
        items:
          $ref: '#/definitions/CreditNote'
      Prepayments:
        type: array
        items:
          $ref: '#/definitions/Prepayment'
      Overpayments:
        type: array
        items:
          $ref: '#/definitions/Overpayment'
    xml:
      name: Invoice
  Item:
    type: object
    required: 
      - Code
    properties:
      Code:
        description: User defined item code
        maxLength: 30
        type: string
        example: ABC123
      InventoryAssetAccountCode:
        description: >-
          The inventory asset account for the item. The account must be of type
          INVENTORY. The  COGSAccountCode in PurchaseDetails is also required to
          create a tracked item
        type: string
        example: 630
      Name:
        description: The name of the item (max length = 50)
        maxLength: 50
        type: string
        example: Widget
      IsSold:
        description: >-
          Boolean value, defaults to true. When IsSold is true the item will be
          available on sales transactions in the Xero UI. If IsSold is updated
          to false then Description and SalesDetails values will be nulled.
        type: boolean
      IsPurchased:
        description: >-
          Boolean value, defaults to true. When IsPurchased is true the item is
          available for purchase transactions in the Xero UI. If IsPurchased is
          updated to false then PurchaseDescription and PurchaseDetails values
          will be nulled.
        type: boolean
      Description:
        description: The sales description of the item 
        maxLength: 4000
        type: string
        example: A really cool widget
      PurchaseDescription:
        description: The purchase description of the item 
        maxLength: 4000
        type: string
        example: A cheapo widget
      PurchaseDetails:
        $ref: '#/definitions/PurchaseDetails'
      SalesDetails:
        $ref: '#/definitions/SalesDetails'
      IsTrackedAsInventory:
        description: >-
          True for items that are tracked as inventory. An item will be tracked
          as inventory if the InventoryAssetAccountCode and COGSAccountCode are
          set.
        type: boolean
        readOnly: true
      TotalCostPool:
        description: >-
          The value of the item on hand. Calculated using average cost
          accounting.
        type: number
        format: float
        readOnly: true
      QuantityOnHand:
        description: The quantity of the item on hand
        type: number
        format: float
        readOnly: true
      UpdatedDateUTC:
        description: Last modified date in UTC format
        type: string
        format: date-time
        readOnly: true
      ItemID:
        description: The Xero identifier for an Item
        type: string
        format: uuid
        readOnly: true
  Journal:
    properties:
      JournalID:
        description: Xero identifier
        type: string
        format: uuid
      JournalDate:
        description: Date the journal was posted
        type: string
        format: date
      JournalNumber:
        description: Xero generated journal number
        type: string
        example: 112
      CreatedDateUTC:
        description: Created date UTC format
        type: string
        format: date-time
      SourceID:
        description: The identifier for the source transaction (e.g. InvoiceID)
        type: string
        format: uuid
      SourceType:
        description: >-
          The journal source type. The type of transaction that created the
          journal
        enum:
          - ACCREC
          - ACCPAY
          - ACCPAYCREDIT
          - ACCRECPAYMENT
          - ACCPAYPAYMENT
          - ARCREDITPAYMENT
          - APCREDITPAYMENT
          - CASHREC
          - CASHPAID
          - TRANSFER
          - ARPREPAYMENT
          - APPREPAYMENT
          - AROVERPAYMENT
          - APOVERPAYMENT
          - EXPCLAIM
          - EXPPAYMENT
          - MANJOURNAL
          - PAYSLIP
          - WAGEPAYABLE
          - INTEGRATEDPAYROLLPE
          - INTEGRATEDPAYROLLPT
          - EXTERNALSPENDMONEY
          - INTEGRATEDPAYROLLPTPAYMENT
          - INTEGRATEDPAYROLLCN
      JournalLines:
        description: See JournalLines
        type: array
        items:
          $ref: '#/definitions/JournalLine'
  JournalLine:
    properties:
      LineAmount:
        description: 'Total for line. Debits are positive, credits are negative value'
        type: number
        format: float
      AccountCode:
        description: See Accounts
        type: string
        example: 200
      Description:
        description: Description for journal line
        type: string
        example: Bought a thing
      TaxType:
        description: >-
          Used as an override if the default Tax Code for the selected
          <AccountCode> is not correct – see TaxTypes.
        type: string
        example: NONE
      Tracking:
        description: >-
          Optional Tracking Category – see Tracking. Any JournalLine can have a
          maximum of 2 <TrackingCategory> elements.
        type: array
        items:
          $ref: '#/definitions/TrackingCategory'
      TaxAmount:
        description: The calculated tax amount based on the TaxType and LineAmount
        readOnly: true
        type: number
        format: float
  LineItem:
    type: object
    required:
      - Description
    properties:
      Description:
        type: string
        description: >-
          Description needs to be at least 1 char long. A line item with just a
          description (i.e no unit amount or quantity) can be created by
          specifying just a <Description> element that contains at least 1
          character
        example: Travel Expenses
      Quantity:
        type: number
        format: float
        description: LineItem Quantity
      UnitAmount:
        type: number
        format: float
        description: >-
          Lineitem unit amount. By default, unit amount will be rounded to two
          decimal places. You can opt in to use four decimal places by adding
          the querystring parameter unitdp=4 to your query. See the Rounding in
          Xero guide for more information.
      ItemCode:
        type: string
        description: Code of the item
        example: 110
      AccountCode:
        type: string
        description: The account that the lineitem is being coded to
        example: 420
      LineItemID:
        type: string
        format: uuid
        description: >-
          The Xero generated identifier for a LineItem. If LineItemIDs are not
          included with line items in an update request then the line items are
          deleted and recreated.
        readOnly: true
      TaxType:
        type: string
        description: >-
          Used as an override if the default Tax Code for the selected
          <AccountCode> is not correct
        
      TaxAmount:
        type: number
        format: float
        description: >-
          The tax amount is auto calculated as a percentage of the line amount
          (see below) based on the tax rate. This value can be overriden if the
          calculated <TaxAmount> is not correct.
      LineAmount:
        type: number
        format: float
        description: >-
          The line amount reflects the discounted price if a DiscountRate has
          been used i.e LineAmount = Quantity * Unit Amount * ((100 –
          DiscountRate)/100)
      DiscountRate:
        type: number
        format: float
        description: >-
          Percentage discount being applied to a line item (only supported on
          ACCREC invoices – ACC PAY invoices and credit notes in Xero do not
          support discounts
      Tracking:
        $ref: '#/definitions/Tracking'
  LineItems:
    type: array
    items:
      $ref: '#/definitions/LineItem'
  LinkedTransaction:
    type: object
    properties:
      SourceTransactionID:
        description: >-
          Filter by the SourceTransactionID. Get all the linked transactions
          created from a particular ACCPAY invoice
        type: string
        format: uuid
      SourceLineItemID:
        description: The line item identifier from the source transaction.
        type: string
        format: uuid
      ContactID:
        description: >-
          Filter by the combination of ContactID and Status. Get all the linked
          transactions that have been assigned to a particular customer and have
          a particular status e.g. GET
          /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.
        type: string
        format: uuid
      TargetTransactionID:
        description: >-
          Filter by the TargetTransactionID. Get all the linked transactions
          allocated to a particular ACCREC invoice
        type: string
        format: uuid
      TargetLineItemID:
        description: >-
          The line item identifier from the target transaction. It is possible
          to link multiple billable expenses to the same TargetLineItemID.
        type: string
        format: uuid
      LinkedTransactionID:
        description: >-
          The Xero identifier for an Linked Transaction e.g.
          /LinkedTransactions/297c2dc5-cc47-4afd-8ec8-74990b8761e9
        type: string
        format: uuid
        readOnly: true
      Status:
        description: >-
          Filter by the combination of ContactID and Status. Get all the linked
          transactions that have been assigned to a particular customer and have
          a particular status e.g. GET
          /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.
        enum:
          - DRAFT
          - APPROVED
          - ONDRAFT
          - BILLED
          - VOIDED
        readOnly: true
      Type:
        description: >-
          This will always be BILLABLEEXPENSE. More types may be added in
          future.
        enum:
         - BILLABLEEXPENSE
        readOnly: true
      UpdatedDateUTC:
        description: The last modified date in UTC format
        type: string
        format: date-time
        readOnly: true
      SourceTransactionTypeCode:
        description: >-
          The Type of the source tranasction. This will be ACCPAY if the linked
          transaction was created from an invoice and SPEND if it was created
          from a bank transaction.
        type: string
        readOnly: true
  ManualJournal:
    type: object
    properties:
      Narration:
        description: Description of journal being posted
        type: string
      JournalLines:
        description: See JournalLines
        type: array
        items:
          $ref: '#/definitions/JournalLine'
      Date:
        description: Date journal was posted – YYYY-MM-DD
        type: string
        format: date
      LineAmountTypes:
        description: >-
          NoTax by default if you don’t specify this element. See Line Amount
          Types
        type: string
      Status:
        description: See Manual Journal Status Codes
        type: string
      Url:
        description: >-
          Url link to a source document – shown as “Go to [appName]” in the Xero
          app
        type: string
      ShowOnCashBasisReports:
        description: Boolean – default is true if not specified
        type: boolean
      HasAttachments:
        description: Boolean to indicate if a manual journal has an attachment
        readOnly: true
        type: boolean
      UpdatedDateUTC:
        description: Last modified date UTC format
        readOnly: true
        type: string
        format: date-time
      JournalID:
        description: The Xero identifier for a Manual Journal
        type: string
        format: uuid
    required:
      - Narration
      - JournalLines
  OnlineInvoice:
    properties:
      OnlineInvoiceUrl:
        description: >-
          The URL to view the online invoice
        type: string
  Organisation:
    properties:
      APIKey:
        description: Display a unique key used for Xero-to-Xero transactions
        type: string
      Name:
        description: Display name of organisation shown in Xero
        type: string
      LegalName:
        description: Organisation name shown on Reports
        type: string
      PaysTax:
        description: >-
          Boolean to describe if organisation is registered with a local tax
          authority i.e. true, false
        type: boolean
      Version:
        description: See Version Types
        type: string
        enum:
          - AU
          - NZ
          - GLOBAL
          - UK
          - US
          - AUONRAMP
          - NZONRAMP
          - GLOBALONRAMP
          - UKONRAMP
          - USONRAMP
      OrganisationType:
        description: Organisation Type
        type: string
        enum:
          - COMPANY
          - CHARITY
          - CLUBSOCIETY
          - PARTNERSHIP
          - PRACTICE
          - PERSON
          - SOLETRADER
          - TRUST
      BaseCurrency:
        description: Default currency for organisation. See ISO 4217 Currency Codes
        type: string
      CountryCode:
        description: Country code for organisation. See ISO 3166-2 Country Codes
        type: string
      IsDemoCompany:
        description: Boolean to describe if organisation is a demo company.
        type: boolean
      OrganisationStatus:
        description: >-
          Will be set to ACTIVE if you can connect to organisation via the Xero
          API
        type: string
      RegistrationNumber:
        description: 'Shows for New Zealand, Australian and UK organisations'
        type: string
      TaxNumber:
        description: >-
          Shown if set. Displays in the Xero UI as Tax File Number (AU), GST
          Number (NZ), VAT Number (UK) and Tax ID Number (US & Global).
        type: string
      FinancialYearEndDay:
        description: Calendar day e.g. 0-31
        type: string
      FinancialYearEndMonth:
        description: Calendar Month e.g. 1-12
        type: string
      SalesTaxBasis:
        description: The accounting basis used for tax returns. See Sales Tax Basis
        type: string
      SalesTaxPeriod:
        description: >-
          The frequency with which tax returns are processed. See Sales Tax
          Period
        type: string
      DefaultSalesTax:
        description: The default for LineAmountTypes on sales transactions
        type: string
      DefaultPurchasesTax:
        description: The default for LineAmountTypes on purchase transactions
        type: string
      PeriodLockDate:
        description: Shown if set. See lock dates
        type: string
      EndOfYearLockDate:
        description: Shown if set. See lock dates
        type: string
      CreatedDateUTC:
        description: Timestamp when the organisation was created in Xero
        type: string
        format: date-time
      Timezone:
        description: Timezone specifications
        type: string
      OrganisationEntityType:
        description: Organisation Type
        type: string
        enum:
          - COMPANY
          - CHARITY
          - CLUBSOCIETY
          - PARTNERSHIP
          - PRACTICE
          - PERSON
          - SOLETRADER
          - TRUST
      ShortCode:
        description: A unique identifier for the organisation. Potential uses.
        type: string
      LineOfBusiness:
        description: Description of business type as defined in Organisation settings
        type: string
      Addresses:
        description: Address details for organisation – see Addresses
        type: array
        items:
          $ref: '#/definitions/Address'
      Phones:
        description: Phones details for organisation – see Phones
        type: array
        items:
          $ref: '#/definitions/Phone'
      ExternalLinks:
        description: >-
          Organisation profile links for popular services such as Facebook,
          Twitter, GooglePlus and LinkedIn. You can also add link to your
          website here. Shown if Organisation settings  is updated in Xero. See
          ExternalLinks below
        type: array
        items:
          $ref: '#/definitions/ExternalLink'
      PaymentTerms:
        allOf:
          - description: >-
              Default payment terms for the organisation if set – See Payment
              Terms below
          - $ref: '#/definitions/PaymentTerms'
  Overpayment:
    type: object
    properties:
      PrepaymentID:
        type: string
      Date:
        type: string
        format: date
      Total:
        type: number
        format: float
      AppliedAmount:
        type: number
        format: float
  Payment:
    type: object
    properties:
      PaymentID:
        type: string
        format: uuid
      Date:
        type: string
        format: date
      Amount:
        type: number
        format: float
      CurrencyRate:
        type: number
        format: float
  PaymentTerms:
    type: array
    items:
      properties:
        Sales:
         type: object
         properties:
            Days:
              type: string
              example: 30
            Type:
              type: string
              example: DAYSAFTERBILLDATE
              enum:
                - DAYSAFTERBILLDATE
                - DAYSAFTERBILLMONTH
                - OFCURRENTMONTH
                - OFFOLLOWINGMONTH
        Bills:
         type: object
         properties:
            Days:
              type: string
              example: 1
            Type:
              type: string
              example: OFFOLLOWINGMONTH
              enum:
                - DAYSAFTERBILLDATE
                - DAYSAFTERBILLMONTH
                - OFCURRENTMONTH
                - OFFOLLOWINGMONTH  
  Phone:
    type: object
    properties:
      PhoneType:
        type: string
        description: The phone type
        example: DDI
        enum:
          - DEFAULT
          - DDI
          - MOBILE
          - FAX
      PhoneNumber:
        type: string
        example: 9885 4589
        maxLength: 50
      PhoneAreaCode:
        type: string
        example: 03
        maxLength: 10
      PhoneCountryCode:
        type: string
        example: 01
        maxLength: 20
  Phones:
    type: array
    items:
      $ref: '#/definitions/Phone'
  Prepayment:
    type: object
    properties:
      Date:
        description: The date the prepayment is created YYYY-MM-DD
        type: string
        format: date
      Type:
        description: See Prepayment Types
        type: string
        enum:
          - RECEIVE-PREPAYMENT
          - SPEND-PREPAYMENT
      Contact:
        $ref: '#/definitions/Contact'
      Status:
        description: See Prepayment Status Codes
        type: string
        enum:
          - AUTHORISED
          - PAID
          - VOIDED
      LineAmountTypes:
        description: See Prepayment Line Amount Types
        type: string
      LineItems:
        description: See Prepayment Line Items
        type: array
        items:
          $ref: '#/definitions/LineItem'
      SubTotal:
        description: The subtotal of the prepayment excluding taxes
        type: number
        format: float
      TotalTax:
        description: The total tax on the prepayment
        type: number
        format: float
      Total:
        description: The total of the prepayment(subtotal + total tax)
        type: number
        format: float
      UpdatedDateUTC:
        description: UTC timestamp of last update to the prepayment
        type: string
        format: date-time
      CurrencyCode:
        description: Currency used for the prepayment
        type: string
      PrepaymentID:
        description: Xero generated unique identifier
        type: string
        format: uuid
      CurrencyRate:
        description: >-
          The currency rate for a multicurrency prepayment. If no rate is
          specified, the XE.com day rate is used
        type: number
        format: float
      RemainingCredit:
        description: The remaining credit balance on the prepayment
        type: string
      Allocations:
        description: See Allocations
        type: array
        items:
          $ref: '#/definitions/Allocation'
      HasAttachments:
        description: boolean to indicate if a prepayment has an attachment
        type: boolean 
  PurchaseDetails:
    properties:
      UnitPrice:
        description: >-
          Unit Price of the item. By default UnitPrice is rounded to two decimal
          places. You can use 4 decimal places by adding the unitdp=4
          querystring parameter to your request.
        type: number
        format: float
      AccountCode:
        description: >-
          Default account code to be used for purchase of non-tracked items. Not applicable to
          the purchase details of tracked items
        type: string
        example: 420
      COGSAccountCode:
        description: >-
          Cost of goods sold account. Only applicable to the purchase details of
          tracked items.
        type: string
        example: 420
      TaxType:
        description: >-
          Used as an override if the default Tax Code for the selected
          <AccountCode> is not correct – see TaxTypes.
        type: string 
        example: NONE
  PurchaseOrder:
    type: object
    properties:
      Contact:
        allOf:
          - description: >-
              The PurchaseOrders endpoint does not create new contacts. You need
              to provide the ContactID or ContactNumber of an existing contact.
              For more information on creating contacts see Contacts.
          - $ref: '#/definitions/Contact'
      LineItems:
        description: See LineItems
        type: array
        items:
          $ref: '#/definitions/LineItem'
      Date:
        description: >-
          Date purchase order was issued – YYYY-MM-DD. If the Date element is
          not specified then it will default to the current date based on the
          timezone setting of the organisation
        type: string
        format: date
      DeliveryDate:
        description: Date the goods are to be delivered – YYYY-MM-DD
        type: string
        format: date
      LineAmountTypes:
        description: >-
          Line amounts are exclusive of tax by default if you don’t specify this
          element. See Line Amount Types
        type: string
      PurchaseOrderNumber:
        description: >-
          Unique alpha numeric code identifying purchase order (when missing
          will auto-generate from your Organisation Invoice Settings)
        type: string
      Reference:
        description: Additional reference number
        type: string
      BrandingThemeID:
        description: See BrandingThemes
        type: string
        format: uuid
      CurrencyCode:
        description: The currency that purchase order has been raised in (see Currencies)
        type: string
      Status:
        description: See Purchase Order Status Codes
        type: string
      SentToContact:
        description: >-
          Boolean to set whether the purchase order should be marked as “sent”.
          This can be set only on purchase orders that have been approved or
          billed
        type: boolean
      DeliveryAddress:
        description: The address the goods are to be delivered to
        type: string
      AttentionTo:
        description: The person that the delivery is going to
        type: string
      Telephone:
        description: The phone number for the person accepting the delivery
        type: string
      DeliveryInstructions:
        description: A free text feild for instructions (500 characters max)
        type: string
      ExpectedArrivalDate:
        description: The date the goods are expected to arrive.
        type: string
        format: date
      PurchaseOrderID:
        description: Xero generated unique identifier for purchase order
        type: string
        format: uuid
      CurrencyRate:
        description: >-
          The currency rate for a multicurrency purchase order. As no rate can
          be specified, the XE.com day rate is used.
        readOnly: true
        type: number
        format: float
      SubTotal:
        description: Total of purchase order excluding taxes
        readOnly: true
        type: number
        format: float
      TotalTax:
        description: Total tax on purchase order
        readOnly: true
        type: number
        format: float
      Total:
        description: Total of Purchase Order tax inclusive (i.e. SubTotal + TotalTax)
        readOnly: true
        type: number
        format: float
      TotalDiscount:
        description: Total of discounts applied on the purchase order line items
        readOnly: true
        type: number
        format: float
      HasAttachments:
        description: boolean to indicate if a purchase order has an attachment
        readOnly: true
        type: boolean
      UpdatedDateUTC:
        description: Last modified date UTC format
        readOnly: true
        type: string
        format: date-time
    required:
      - Contact
      - LineItems
  Receipt:
    type: object
    properties:
      Date:
        description: Date of receipt – YYYY-MM-DD
        type: string
        format: date
      Contact:
        allOf:
          - description: See Contacts
          - $ref: '#/definitions/Contact'
      Lineitems:
        description: See LineItems
        type: array
        items:
          $ref: '#/definitions/LineItem'
      User:
        allOf:
          - description: >-
              The user in the organisation that the expense claim receipt is
              for. See Users
          - $ref: '#/definitions/User'
      Reference:
        description: Additional reference number
        type: string
      LineAmountTypes:
        description: See Line Amount Types
        type: string
      SubTotal:
        description: Total of receipt excluding taxes
        type: number
        format: float
      TotalTax:
        description: Total tax on receipt
        type: number
        format: float
      Total:
        description: Total of receipt tax inclusive (i.e. SubTotal + TotalTax)
        type: number
        format: float
      ReceiptID:
        description: Xero generated unique identifier for receipt
        readOnly: true
        type: string
        format: uuid
      Status:
        description: Current status of receipt – see status types
        readOnly: true
        type: string
      ReceiptNumber:
        description: >-
          Xero generated sequence number for receipt in current claim for a
          given user
        readOnly: true
        type: string
      UpdatedDateUTC:
        description: Last modified date UTC format
        readOnly: true
        type: string
        format: date-time
      HasAttachments:
        description: boolean to indicate if a receipt has an attachment
        readOnly: true
        type: boolean
      Url:
        description: >-
          URL link to a source document – shown as “Go to [appName]” in the Xero
          app
        readOnly: true
        type: string
    required:
      - Date
      - Contact
      - Lineitems
      - User
  RepeatingInvoice:
    properties:
      Type:
        description: See Invoice Types
        type: string
      Contact:
        allOf:
          - description: See Contacts
          - $ref: '#/definitions/Contact'
      Schedule:
        allOf:
          - description: See Schedule
          - $ref: '#/definitions/Schedule'
      LineItems:
        description: See LineItems
        type: array
        items:
          $ref: '#/definitions/LineItem'
      LineAmountTypes:
        description: >-
          Line amounts are exclusive of tax by default if you don’t specify this
          element. See Line Amount Types
        type: string
      Reference:
        description: ACCREC only – additional reference number
        type: string
      BrandingThemeID:
        description: See BrandingThemes
        type: string
        format: uuid
      CurrencyCode:
        description: The currency that invoice has been raised in (see Currencies)
        type: string
      Status:
        description: 'One of the following : DRAFT or AUTHORISED – See Invoice Status Codes'
        type: string
      SubTotal:
        description: Total of invoice excluding taxes
        type: number
        format: float
      TotalTax:
        description: Total tax on invoice
        type: number
        format: float
      Total:
        description: Total of Invoice tax inclusive (i.e. SubTotal + TotalTax)
        type: number
        format: float
      RepeatingInvoiceID:
        description: Xero generated unique identifier for repeating invoice template
        type: string
        format: uuid
      HasAttachments:
        description: boolean to indicate if an invoice has an attachment
        type: boolean
  Report:
    properties:
      ReportID:
        description: Identifier of the report
        type: string
        example: BalanceSheet
      ReportName:
        description: Name of the report
        type: string
        example: Balance Sheet
      ReportType:
        description: Type of report
        type: string
        example: BalanceSheet
      ReportTitles:
        type: array
        description: The titles of the report
        example: Balance Sheet
        items:
          type: string
      ReportDate:
        description: The date of the report
        type: string
        example: 10 November 2017
      UpdatedDateUTC:
        description: The date and time the report was generated
        type: string
        format: date-time
      Rows:
        type: array
        description: The rows of the report that contain the data (including header rows)
        items:
          type: object
          properties:
            RowType:
              description: The type of row
              enum:
                - Header
                - Section
                - Row
                - SummaryRow
            Cells:
              type: array
              items:
                type: object
                properties:
                  Value:
                    description: Header row labels
                    type: string
                    example: 30 Nov 2017
            Title:
              description: The title of the row
              example: Assets
              type: string
            Rows:
              type: array
              description: The rows of the report (including header rows)
              items:
                type: object
                properties:
                  RowType:
                    description: The type of row
                    enum:
                      - Row
                      - SummaryRow
                  Cells:
                    type: array
                    description: The cells that contain the data of the report
                    items:
                      type: object
                      properties:
                        Value:
                          description: The data displayed in the report
                          type: string
                          example: Business Account
                        Attributes:
                          type: array
                          description: AccountID that the Value relates to
                          items:
                            type: object
                            properties:
                              Value:
                                description: The AccountID that the Value relates to
                                type: string
                                format: uuid
                              Id:
                                description: Always 'account'
                                enum:
                                  - account
  ReportSummary:
    properties:
      ReportID:
        description: Identifier of the report
        type: string
        format: uuid
      ReportName:
        description: Name of the report
        type: string
        example: Activity Statement
      ReportType:
        description: Type of report
        type: string
        example: ActivityStatement
      ReportDate:
        description: The date of the report
        type: string
        example: 1 Oct 2017 to 31 Oct 2017
      UpdatedDateUTC:
        description: The date and time the report was generated
        type: string
        format: date-time
  TaxReport:
    properties:
      ReportID:
        description: Identifier of the report
        type: string
        format: uuid
      ReportName:
        description: Name of the report
        type: string
        example: Activity Statement
      ReportType:
        description: Type of report
        type: string
        example: SalesTaxReturn
      ReportDate:
        description: The date of the report
        type: string
        example: 10 November 2017
      UpdatedDateUTC:
        description: The date and time the report was generated
        type: string
        format: date-time
      Attributes:
        type: object
        properties:
          ReportAttribute:
            type: array
            description: The attributes of the report (AU BAS Report only)
            items:
              type: object
              properties:
                Name:
                  description: The identifier for the field
                  type: string
                  example: fromDate
                Description:
                  type: string
                  description: The description of the field
                  example: From
                Value:
                  description: The value of the field
                  example: 2011-11-01T00:00:00
                  type: string
      Fields:
        type: object
        properties:
          ReportField:
            type: array
            description: The report fields that contain useful data
            items:
              type: object
              properties:
                FieldID:
                  description: The identifier for the field
                  type: string
                  example: W1
                Description:
                  type: string
                  description: The description of the field
                  example: Total salary, wages and other payments
                Value:
                  description: The value of the field
                  example: 500
                  type: string
  SalesDetails:
    properties:
      UnitPrice:
        description: >-
          Unit Price of the item. By default UnitPrice is rounded to two decimal
          places. You can use 4 decimal places by adding the unitdp=4
          querystring parameter to your request.
        type: number
        format: float
      AccountCode:
        description: >-
          Default account code to be used for sale.
        type: string
        example: 200
      TaxType:
        description: >-
          Used as an override if the default Tax Code for the selected
          <AccountCode> is not correct – see TaxTypes.
        type: string 
        example: NONE
  Schedule:
    properties:
      Period:
        description: 'Integer used with the unit e.g. 1 (every 1 week), 2 (every 2 months)'
        type: integer
      Unit:
        description: 'One of the following : WEEKLY or MONTHLY'
        type: string
      DueDate:
        description: >-
          Integer used with due date type e.g 20 (of following month), 31 (of
          current month)
        type: integer
      DueDateType:
        description: >-
          Used with due date to describe when the invoice is due
        example: DAYSAFTERBILLDATE
        enum:
          - DAYSAFTERBILLDATE
          - DAYSAFTERBILLMONTH
          - OFCURRENTMONTH
          - OFFOLLOWINGMONTH
      StartDate:
        description: >-
          Date the first invoice of the current version of the repeating
          schedule was generated (changes when repeating invoice is edited)
        type: string
        format: date
      NextScheduledDate:
        description: The calendar date of the next invoice in the schedule to be generated
        type: string
        format: date
      EndDate:
        description: Invoice end date – only returned if the template has an end date set
        type: string
        format: date
  TaxRate:
    type: object
    properties:
      Name:
        description: Name of tax rate
        type: string
      TaxType:
        description: See Tax Types – can only be used on update calls
        type: string
      TaxComponents:
        description: See TaxComponents
        type: array
        items:
          $ref: '#/definitions/TaxComponent'
      Status:
        description: See Status Codes
        type: string
        enum:
          - ACTIVE
          - DELETED
          - ARCHIVED
      ReportTaxType:
        description: See ReportTaxTypes
        type: string
      CanApplyToAssets:
        description: >-
          Boolean to describe if tax rate can be used for asset accounts i.e.
          true,false
        readOnly: true
        type: number
        format: float
      CanApplyToEquity:
        description: >-
          Boolean to describe if tax rate can be used for equity accounts i.e.
          true,false
        readOnly: true
        type: number
        format: float
      CanApplyToExpenses:
        description: >-
          Boolean to describe if tax rate can be used for expense accounts i.e.
          true,false
        readOnly: true
        type: number
        format: float
      CanApplyToLiabilities:
        description: >-
          Boolean to describe if tax rate can be used for liability accounts
          i.e. true,false
        readOnly: true
        type: number
        format: float
      CanApplyToRevenue:
        description: >-
          Boolean to describe if tax rate can be used for revenue accounts i.e.
          true,false
        readOnly: true
        type: number
        format: float
      DisplayTaxRate:
        description: Tax Rate (decimal to 4dp) e.g 12.5000
        readOnly: true
        type: number
        format: float
      EffectiveRate:
        description: Effective Tax Rate (decimal to 4dp) e.g 12.5000
        readOnly: true
        type: number
        format: float
    required:
      - ReportTaxType
  TaxComponent:
    properties:
      Name:
        description: Name of Tax Component
        type: string
      Rate:
        description: Tax Rate (up to 4dp)
        type: number
        format: float
      IsCompound:
        description: Boolean to describe if Tax rate is compounded.Learn more
        type: number
        format: float
      TaxType:
        description: Filter by a Tax Type
        type: string
  TrackingCategory:
    type: object
    properties:
      TrackingCategoryID:
        description: >-
          The Xero identifier for a tracking categorye.g.
          297c2dc5-cc47-4afd-8ec8-74990b8761e9
        type: string
        format: uuid
      Name:
        description: >-
          The name of the tracking category e.g. Department, Region (max length
          = 100)
        maxLength: 100
        type: string
      Status:
        description: The status of a tracking category
        type: string
      Options:
        description: See Tracking Options
        type: array
        items:
          $ref: '#/definitions/TrackingOption'
  TrackingOption:
    type: object
    properties:
      TrackingOptionID:
        description: >-
          The Xero identifier for a tracking optione.g.
          ae777a87-5ef3-4fa0-a4f0-d10e1f13073a
        type: string
        format: uuid
      Name:
        description: 'The name of the tracking option e.g. Marketing, East (max length = 50)'
        maxLength: 50
        type: string
      Status:
        description: The status of a tracking option
        type: string
      TrackingCategoryID:
        description: Filter by a tracking categorye.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9
        type: string
        format: uuid
  PurchasesTrackingCategory:
    type: object
    properties:
      TrackingCategoryID:
        type: string
        format: uuid
      Name:
        type: string
      Option:
        type: string
  PurchasesTrackingCategories:
    type: array
    items:
      $ref: '#/definitions/PurchasesTrackingCategory'
  SalesTrackingCategory:
    type: object
    properties:
      TrackingCategoryID:
        type: string
        format: uuid
      Name:
        type: string
      Option:
        type: string
  SalesTrackingCategories:
    type: array
    items:
      $ref: '#/definitions/SalesTrackingCategory'
  Tracking:
    type: array
    items:
      $ref: '#/definitions/TrackingCategory'
  User:
    type: object
    properties:
      UserID:
        description: Xero identifier
        type: string
        format: uuid
      EmailAddress:
        description: Email address of user
        type: string
      FirstName:
        description: First name of user
        type: string
      LastName:
        description: Last name of user
        type: string
      UpdatedDateUTC:
        description: Timestamp of last change to user
        type: string
        format: date-time
      IsSubscriber:
        description: Boolean to indicate if user is the subscriber
        type: boolean
      OrganisationRole:
        description: User role (see Types)
        type: string
parameters:
  If-Modified-Since:
    name: If-Modified-Since
    in: header
    description: >-
      A UTC timestamp (yyyy-mm-ddThh:mm:ss) . Only invoices created or modified
      since this timestamp will be returned e.g. 2009-11-12T00:00:00
    required: false
    type: string
    format: date-time
  page:
    name: page
    in: query
    description: >-
      Page number e.g. page=1. Page size is 100. When using the page parameter full resource details will be returned (including line items).
    type: integer
    required: false
  offset:
    name: offset
    in: query
    description: >-
      Offset by a specified journal number. e.g. journals with a JournalNumber greater than the offset will be returned.
    type: integer
    required: false
  paymentsOnly:
    name: paymentsOnly
    in: query
    description: >-
      Return results on a the cash basis
    type: boolean
    required: false
  includeArchived:
    name: includeArchived
    in: query
    description: >-
      Include archived records in the response 
    type: boolean
    required: false
  where:
    name: where
    in: query
    description: Filter by an any element
    required: false
    type: string
  order:
    name: order
    in: query
    description: Order by any element returned
    required: false
    type: string
  unitdp:
    name: unitdp
    in: query
    description: Determines the decimal places accepted/returned on the UnitAmount. UnitAmount is 2 decimal places by default but can be increased to 4 decimal places by supplying the unitdp=4 parameter.
    required: false
    type: integer
responses:
  500ErrorResponse:
    description: An unexpected error occured.
    schema:
      type: object
      xml:
        name: APIException
      properties:
        ErrorNumber:
          type: string
          description: The HTTP error code
          example: 500
        Type:
          type: string
          description: The type of exception
          example: UnknownErrorException
        Message:
          type: string
          description: The exception description
          example: >-
              An error occurred in Xero. Check the API Status page for current service status. Contact the API support team at api@xero.com for more assistance.
  400ErrorResponse:
    description: An validation exception occured.
    schema:
      type: object
      xml:
        name: APIException
      properties:
        ErrorNumber:
          type: string
          description: Please ignore (doesn't really mean anything) 
          example: 10
        Type:
          type: string
          description: The type of exception
          example: ValidationException
        Message:
          type: string
          description: The exception description
          example: >-
              A validation exception occurred
        Elements:
          type: object
          properties:
            DataContractBase:
              type: object
              properties:
                ValidationErrors:
                  type: array
                  items:
                    properties:
                      ValidationError:
                       type: object
                       properties:
                        Message:
                          type: string
                          description: The validation error message
                          example: You did something silly
  404ErrorResponse:
    description: The resource you're looking for cannot be found
  AttachmentsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Attachments:
          type: array
          items:
            $ref: '#/definitions/Attachment'
  AccountsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Accounts:
          type: array
          items:
            $ref: '#/definitions/Account' 
  BankTransactionsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        BankTransactions:
          type: array
          items:
            $ref: '#/definitions/BankTransaction'          
  BankTransfersResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        BankTransfers:
          type: array
          items:
            $ref: '#/definitions/BankTransfer'
  BrandingThemesResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        BrandingThemes:
          type: array
          items:
            $ref: '#/definitions/BrandingTheme'
  ContactsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Contacts:
          type: array
          items:
            $ref: '#/definitions/Contact'
  ContactGroupsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        ContactGroups:
          type: array
          items:
            $ref: '#/definitions/ContactGroup'   
  CreditNotesResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        CreditNotes:
          type: array
          items:
            $ref: '#/definitions/CreditNote'
  CurrenciesResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Currencies:
          type: array
          items:
            $ref: '#/definitions/Currency'
  EmployeesResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Employees:
          type: array
          items:
            $ref: '#/definitions/Employee'    
  ExpenseClaimsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        ExpenseClaims:
          type: array
          items:
            $ref: '#/definitions/ExpenseClaim'  
  InvoicesResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Invoices:
          type: array
          items:
            $ref: '#/definitions/Invoice' 
  ItemsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Items:
          type: array
          items:
            $ref: '#/definitions/Item'   
  JournalsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Journals:
          type: array
          items:
            $ref: '#/definitions/Journal'
  LinkedTransactionsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        LinkedTransactions:
          type: array
          items:
            $ref: '#/definitions/LinkedTransaction'
  ManualJournalsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        ManualJournals:
          type: array
          items:
            $ref: '#/definitions/ManualJournal'
  OnlineInvoicesResponse:
    description: A successful response
    schema:
      type: object
      xml:
       name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        OnlineInvoices:
          type: array
          items:
            $ref: '#/definitions/OnlineInvoice'
  OrganisationsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Organisations:
          type: array
          items:
            $ref: '#/definitions/Organisation' 
  OverpaymentsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Overpayments:
          type: array
          items:
            $ref: '#/definitions/Overpayment'
  PaymentsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Payments:
          type: array
          items:
            $ref: '#/definitions/Payment'  
  PrepaymentsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Prepayments:
          type: array
          items:
            $ref: '#/definitions/Prepayment'            
  PurchaseOrdersResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        PurchaseOrders:
          type: array
          items:
            $ref: '#/definitions/PurchaseOrder' 
  ReceiptsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Receipts:
          type: array
          items:
            $ref: '#/definitions/Receipt' 
  RepeatingInvoicesResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        RepeatingInvoices:
          type: array
          items:
            $ref: '#/definitions/RepeatingInvoice'
  ReportsResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Reports:
          type: array
          items:
            $ref: '#/definitions/Report'
  ReportSummaryResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Reports:
          type: array
          items:
            $ref: '#/definitions/ReportSummary'
  TaxReportResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Reports:
          type: array
          items:
            $ref: '#/definitions/TaxReport'
  TaxRatesResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        TaxRates:
          type: array
          items:
            $ref: '#/definitions/TaxRate' 
  TrackingCategoriesResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        TrackingCategories:
          type: array
          items:
            $ref: '#/definitions/TrackingCategory' 
  UsersResponse:
    description: A successful response
    schema:
      type: object
      xml:
        name: Response
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for each response
          readOnly: true
          example: 8904103f-f25e-4af2-887a-f5d3acace293
        Status:
          type: string
          description: OK for a successful response
          readOnly: true
          example: OK
        ProviderName:
          type: string
          description: Name of the application that made the request
          readOnly: true
          example: My Awesome App
        DateTimeUTC:
          type: string
          format: date-time
          description: DateTime of the request
          readOnly: true
        Users:
          type: array
          items:
            $ref: '#/definitions/User' 